{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\Arshia Dhiman\\\\Solidity-Staking-Project\\\\staking-frontend\\\\pages\\\\index.tsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { Main } from \"@components\";\nimport { useAppDispatch } from \"@src/hooks\";\nimport { setPools } from \"@src/features/staking.ts/stakingSlice\";\n\nvar Home = function Home(_ref) {\n  _s();\n\n  var pools = _ref.pools;\n\n  var _useState = useState(false),\n      tried = _useState[0],\n      setTried = _useState[1];\n\n  var dispatch = useAppDispatch();\n  useEffect(function () {\n    if (pools.length > 0 && !tried) {\n      dispatch(setPools(pools));\n      setTried(true);\n    }\n  }, [tried, pools]);\n  return /*#__PURE__*/_jsxDEV(Main, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 12\n  }, _this);\n};\n\n_s(Home, \"1NX/Qpsxz/RIjGQzL04FqDBcmPA=\", false, function () {\n  return [useAppDispatch];\n});\n\n_c = Home;\nexport var __N_SSP = true;\nexport default Home;\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"sources":["C:/Users/Arshia Dhiman/Solidity-Staking-Project/staking-frontend/pages/index.tsx"],"names":["React","useEffect","useState","Main","useAppDispatch","setPools","Home","pools","tried","setTried","dispatch","length"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AAGA,SAASC,IAAT,QAAqB,aAArB;AAIA,SAASC,cAAT,QAA+B,YAA/B;AACA,SAASC,QAAT,QAAyB,uCAAzB;;AAEA,IAAMC,IAAiC,GAAG,SAApCA,IAAoC,OAAe;AAAA;;AAAA,MAAZC,KAAY,QAAZA,KAAY;;AAAA,kBAC3BL,QAAQ,CAAC,KAAD,CADmB;AAAA,MAC9CM,KAD8C;AAAA,MACvCC,QADuC;;AAErD,MAAMC,QAAQ,GAAGN,cAAc,EAA/B;AAEAH,EAAAA,SAAS,CAAC,YAAM;AACZ,QAAIM,KAAK,CAACI,MAAN,GAAe,CAAf,IAAoB,CAACH,KAAzB,EAAgC;AAC5BE,MAAAA,QAAQ,CAACL,QAAQ,CAACE,KAAD,CAAT,CAAR;AACAE,MAAAA,QAAQ,CAAC,IAAD,CAAR;AACH;AACJ,GALQ,EAKN,CAACD,KAAD,EAAQD,KAAR,CALM,CAAT;AAOA,sBAAO,QAAC,IAAD;AAAA;AAAA;AAAA;AAAA,WAAP;AACH,CAZD;;GAAMD,I;UAEeF,c;;;KAFfE,I;;AAcN,eAAeA,IAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { GetServerSideProps } from \"next\";\nimport { Pool } from \"src/ts/interfaces\";\nimport { Main } from \"@components\";\nimport { STAKING_ADDRESS } from \"src/constants\";\nimport ABI from \"src/abi/Staking.json\";\nimport { getContract } from \"src/utils\";\nimport { useAppDispatch } from \"@src/hooks\";\nimport { setPools } from \"@src/features/staking.ts/stakingSlice\";\n\nconst Home: React.FC<{ pools: Pool[] }> = ({ pools }) => {\n    const [tried, setTried] = useState(false);\n    const dispatch = useAppDispatch();\n\n    useEffect(() => {\n        if (pools.length > 0 && !tried) {\n            dispatch(setPools(pools));\n            setTried(true);\n        }\n    }, [tried, pools]);\n\n    return <Main />;\n};\n\nexport default Home;\n\nexport const getServerSideProps: GetServerSideProps = async () => {\n    const staking = getContract(STAKING_ADDRESS, ABI);\n    // eslint-disable-next-line\n    const _pools = (await staking.getPools()) as any[];\n\n    const pools = _pools.map(\n        ({ poolName, rewardRate, lockPeriod, totalStaked }, id) => ({\n            name: poolName,\n            rewardRate: rewardRate.toString(),\n            lockPeriod: lockPeriod.toString(),\n            totalStaked: totalStaked.toString(),\n            id: id,\n            user_stake: \"0\",\n            user_reward: \"0\",\n        }),\n    );\n\n    return {\n        props: { pools }, // will be passed to the page component as\n    };\n};\n"]},"metadata":{},"sourceType":"module"}