{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\Arshia Dhiman\\\\Solidity-Staking-Project\\\\staking-frontend\\\\src\\\\components\\\\staking-pool\\\\index.tsx\";\nimport React, { useState } from \"react\";\nimport { Button, Logo } from \"@components\";\nimport { secondsToWeeks } from \"@src/utils\";\nimport { Card } from \"./card\";\nimport { StakeMenu } from \"./stake-menu\";\nimport { TextItem } from \"./text-item\";\nexport const StakingPool = ({\n  pool,\n  balance\n}) => {\n  const {\n    0: showMenu,\n    1: setShowMenu\n  } = useState(false);\n\n  const onClick = () => {\n    setShowMenu(!showMenu);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Card, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"px-4 md:grid grid-cols-7 items-center gap-4 md:pb-2\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-center\",\n        children: /*#__PURE__*/_jsxDEV(Logo, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-span-2\",\n        children: /*#__PURE__*/_jsxDEV(TextItem, {\n          title: \"Name\",\n          text: pool.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TextItem, {\n        title: \"Reward\",\n        text: pool.rewardRate + \" %\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TextItem, {\n        title: \"Lock Period\",\n        text: Math.round(secondsToWeeks(pool.lockPeriod)).toString() + \" weeks\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TextItem, {\n        title: \"Total Staked\",\n        text: parseInt(pool.totalStaked) / 1000000000000000000 + \" ARSH\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        className: \"md:w-16 w-full my-4\",\n        onClick: onClick,\n        children: /*#__PURE__*/_jsxDEV(\"svg\", {\n          xmlns: \"http://www.w3.org/2000/svg\",\n          className: \"h-6 w-6 mx-auto\",\n          fill: \"none\",\n          viewBox: \"0 0 24 24\",\n          stroke: \"currentColor\",\n          children: /*#__PURE__*/_jsxDEV(\"path\", {\n            strokeLinecap: \"round\",\n            strokeLinejoin: \"round\",\n            strokeWidth: 2,\n            d: showMenu ? \"M5 15l7-7 7 7\" : \"M19 9l-7 7-7-7\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 13\n    }, this), showMenu && /*#__PURE__*/_jsxDEV(StakeMenu, {\n      pool: pool,\n      balance: balance\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 26\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 9\n  }, this);\n};","map":{"version":3,"sources":["C:/Users/Arshia Dhiman/Solidity-Staking-Project/staking-frontend/src/components/staking-pool/index.tsx"],"names":["React","useState","Button","Logo","secondsToWeeks","Card","StakeMenu","TextItem","StakingPool","pool","balance","showMenu","setShowMenu","onClick","name","rewardRate","Math","round","lockPeriod","toString","parseInt","totalStaked"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AAEA,SAASC,MAAT,EAAiBC,IAAjB,QAA6B,aAA7B;AACA,SAASC,cAAT,QAA+B,YAA/B;AAGA,SAASC,IAAT,QAAqB,QAArB;AACA,SAASC,SAAT,QAA0B,cAA1B;AACA,SAASC,QAAT,QAAyB,aAAzB;AAEA,OAAO,MAAMC,WAAgC,GAAG,CAAC;AAAEC,EAAAA,IAAF;AAAQC,EAAAA;AAAR,CAAD,KAAuB;AACnE,QAAM;AAAA,OAACC,QAAD;AAAA,OAAWC;AAAX,MAA0BX,QAAQ,CAAC,KAAD,CAAxC;;AAEA,QAAMY,OAAO,GAAG,MAAM;AAClBD,IAAAA,WAAW,CAAC,CAACD,QAAF,CAAX;AACH,GAFD;;AAIA,sBACI,QAAC,IAAD;AAAA,4BACI;AAAK,MAAA,SAAS,EAAC,qDAAf;AAAA,8BACI;AAAK,QAAA,SAAS,EAAC,aAAf;AAAA,+BACI,QAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cADJ,eAKI;AAAK,QAAA,SAAS,EAAC,YAAf;AAAA,+BACI,QAAC,QAAD;AAAU,UAAA,KAAK,EAAE,MAAjB;AAAyB,UAAA,IAAI,EAAEF,IAAI,CAACK;AAApC;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cALJ,eASI,QAAC,QAAD;AAAU,QAAA,KAAK,EAAE,QAAjB;AAA2B,QAAA,IAAI,EAAEL,IAAI,CAACM,UAAL,GAAkB;AAAnD;AAAA;AAAA;AAAA;AAAA,cATJ,eAWI,QAAC,QAAD;AACI,QAAA,KAAK,EAAE,aADX;AAEI,QAAA,IAAI,EACAC,IAAI,CAACC,KAAL,CAAWb,cAAc,CAACK,IAAI,CAACS,UAAN,CAAzB,EAA4CC,QAA5C,KACA;AAJR;AAAA;AAAA;AAAA;AAAA,cAXJ,eAmBI,QAAC,QAAD;AACI,QAAA,KAAK,EAAE,cADX;AAEI,QAAA,IAAI,EACAC,QAAQ,CAACX,IAAI,CAACY,WAAN,CAAR,GAA6B,mBAA7B,GACA;AAJR;AAAA;AAAA;AAAA;AAAA,cAnBJ,eA2BI,QAAC,MAAD;AAAQ,QAAA,SAAS,EAAC,qBAAlB;AAAwC,QAAA,OAAO,EAAER,OAAjD;AAAA,+BACI;AACI,UAAA,KAAK,EAAC,4BADV;AAEI,UAAA,SAAS,EAAC,iBAFd;AAGI,UAAA,IAAI,EAAC,MAHT;AAII,UAAA,OAAO,EAAC,WAJZ;AAKI,UAAA,MAAM,EAAC,cALX;AAAA,iCAOI;AACI,YAAA,aAAa,EAAC,OADlB;AAEI,YAAA,cAAc,EAAC,OAFnB;AAGI,YAAA,WAAW,EAAE,CAHjB;AAII,YAAA,CAAC,EAAEF,QAAQ,GAAG,eAAH,GAAqB;AAJpC;AAAA;AAAA;AAAA;AAAA;AAPJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cA3BJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,EA6CKA,QAAQ,iBAAI,QAAC,SAAD;AAAW,MAAA,IAAI,EAAEF,IAAjB;AAAuB,MAAA,OAAO,EAAEC;AAAhC;AAAA;AAAA;AAAA;AAAA,YA7CjB;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAiDH,CAxDM","sourcesContent":["import React, { useState } from \"react\";\n\nimport { Button, Logo } from \"@components\";\nimport { secondsToWeeks } from \"@src/utils\";\nimport { PoolProps } from \"@ts/interfaces\";\n\nimport { Card } from \"./card\";\nimport { StakeMenu } from \"./stake-menu\";\nimport { TextItem } from \"./text-item\";\n\nexport const StakingPool: React.FC<PoolProps> = ({ pool, balance }) => {\n    const [showMenu, setShowMenu] = useState(false);\n\n    const onClick = () => {\n        setShowMenu(!showMenu);\n    };\n\n    return (\n        <Card>\n            <div className=\"px-4 md:grid grid-cols-7 items-center gap-4 md:pb-2\">\n                <div className=\"text-center\">\n                    <Logo />\n                </div>\n\n                <div className=\"col-span-2\">\n                    <TextItem title={\"Name\"} text={pool.name} />\n                </div>\n\n                <TextItem title={\"Reward\"} text={pool.rewardRate + \" %\"} />\n\n                <TextItem\n                    title={\"Lock Period\"}\n                    text={\n                        Math.round(secondsToWeeks(pool.lockPeriod)).toString() +\n                        \" weeks\"\n                    }\n                />\n\n                <TextItem\n                    title={\"Total Staked\"}\n                    text={\n                        parseInt(pool.totalStaked) / 1000000000000000000 +\n                        \" ARSH\"\n                    }\n                />\n\n                <Button className=\"md:w-16 w-full my-4\" onClick={onClick}>\n                    <svg\n                        xmlns=\"http://www.w3.org/2000/svg\"\n                        className=\"h-6 w-6 mx-auto\"\n                        fill=\"none\"\n                        viewBox=\"0 0 24 24\"\n                        stroke=\"currentColor\"\n                    >\n                        <path\n                            strokeLinecap=\"round\"\n                            strokeLinejoin=\"round\"\n                            strokeWidth={2}\n                            d={showMenu ? \"M5 15l7-7 7 7\" : \"M19 9l-7 7-7-7\"}\n                        />\n                    </svg>\n                </Button>\n            </div>\n            {showMenu && <StakeMenu pool={pool} balance={balance} />}\n        </Card>\n    );\n};\n"]},"metadata":{},"sourceType":"module"}