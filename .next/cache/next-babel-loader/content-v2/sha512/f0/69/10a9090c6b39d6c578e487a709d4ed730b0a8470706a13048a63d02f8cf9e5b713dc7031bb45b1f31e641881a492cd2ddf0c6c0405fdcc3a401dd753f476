{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _regeneratorRuntime from \"C:/Users/Arshia Dhiman/Solidity-Staking-Project/staking-frontend/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"C:/Users/Arshia Dhiman/Solidity-Staking-Project/staking-frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\Arshia Dhiman\\\\Solidity-Staking-Project\\\\staking-frontend\\\\src\\\\components\\\\stake-menu\\\\index.tsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { Button, Input } from \"@components\";\nimport { useContract } from \"src/hooks/useContract\";\nimport { useWeb3React } from \"@web3-react/core\";\nimport { STAKING_ADDRESS } from \"src/constants\";\nimport StakingABI from \"src/abi/Staking.json\";\nexport var StakeMenu = function StakeMenu(_ref) {\n  _s();\n\n  var balance = _ref.balance;\n\n  var _useState = useState(\"0\"),\n      amount = _useState[0],\n      setAmount = _useState[1];\n\n  var _useState2 = useState(false),\n      loading = _useState2[0],\n      setLoading = _useState2[1];\n\n  var staking = useContract(STAKING_ADDRESS, StakingABI, true);\n\n  var _useWeb3React = useWeb3React(),\n      active = _useWeb3React.active,\n      account = _useWeb3React.account;\n\n  var stakeTokens = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              console.log(\"hello\");\n              setLoading(true); // try{\n              //     if (staking){\n              //         const tx = await staking.stake(amount, index)\n              //     }\n              // }\n\n            case 2:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function stakeTokens() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \" flex \",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex-1 border p-10\",\n      children: [/*#__PURE__*/_jsxDEV(Input, {\n        label: \"Stake Amount\",\n        id: \"amount\",\n        placeholder: \"Amount\",\n        value: amount,\n        onChange: function onChange(e) {\n          return setAmount(e.target.value);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 17\n      }, _this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: stakeTokens,\n        children: \"Stake\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 17\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"border p-10 flex-1\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 9\n  }, _this);\n};\n\n_s(StakeMenu, \"TrrZqGzBVMDY6UOf5HhALrPaus0=\", false, function () {\n  return [useContract, useWeb3React];\n});\n\n_c = StakeMenu;\n\nvar _c;\n\n$RefreshReg$(_c, \"StakeMenu\");","map":{"version":3,"sources":["C:/Users/Arshia Dhiman/Solidity-Staking-Project/staking-frontend/src/components/stake-menu/index.tsx"],"names":["React","useState","Button","Input","useContract","useWeb3React","STAKING_ADDRESS","StakingABI","StakeMenu","balance","amount","setAmount","loading","setLoading","staking","active","account","stakeTokens","console","log","e","target","value"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,MAAT,EAAiBC,KAAjB,QAA8B,aAA9B;AACA,SAASC,WAAT,QAA4B,uBAA5B;AACA,SAASC,YAAT,QAA6B,kBAA7B;AACA,SAASC,eAAT,QAAgC,eAAhC;AACA,OAAOC,UAAP,MAAuB,sBAAvB;AAEA,OAAO,IAAMC,SAAwC,GAAG,SAA3CA,SAA2C,OAAiB;AAAA;;AAAA,MAAdC,OAAc,QAAdA,OAAc;;AAAA,kBACzCR,QAAQ,CAAC,GAAD,CADiC;AAAA,MAC9DS,MAD8D;AAAA,MACtDC,SADsD;;AAAA,mBAEvCV,QAAQ,CAAC,KAAD,CAF+B;AAAA,MAE9DW,OAF8D;AAAA,MAErDC,UAFqD;;AAGrE,MAAMC,OAAO,GAAGV,WAAW,CAACE,eAAD,EAAkBC,UAAlB,EAA8B,IAA9B,CAA3B;;AAHqE,sBAIzCF,YAAY,EAJ6B;AAAA,MAI7DU,MAJ6D,iBAI7DA,MAJ6D;AAAA,MAIrDC,OAJqD,iBAIrDA,OAJqD;;AAMrE,MAAMC,WAAW;AAAA,yEAAG;AAAA;AAAA;AAAA;AAAA;AAChBC,cAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ;AACAN,cAAAA,UAAU,CAAC,IAAD,CAAV,CAFgB,CAGhB;AACA;AACA;AACA;AACA;;AAPgB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAH;;AAAA,oBAAXI,WAAW;AAAA;AAAA;AAAA,KAAjB;;AAUA,sBACI;AAAK,IAAA,SAAS,EAAC,QAAf;AAAA,4BACI;AAAK,MAAA,SAAS,EAAC,oBAAf;AAAA,8BACI,QAAC,KAAD;AACI,QAAA,KAAK,EAAC,cADV;AAEI,QAAA,EAAE,EAAC,QAFP;AAGI,QAAA,WAAW,EAAC,QAHhB;AAII,QAAA,KAAK,EAAEP,MAJX;AAKI,QAAA,QAAQ,EAAE,kBAACU,CAAD;AAAA,iBAAOT,SAAS,CAACS,CAAC,CAACC,MAAF,CAASC,KAAV,CAAhB;AAAA;AALd;AAAA;AAAA;AAAA;AAAA,eADJ,eAQI,QAAC,MAAD;AAAQ,QAAA,OAAO,EAAEL,WAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eARJ;AAAA;AAAA;AAAA;AAAA;AAAA,aADJ,eAWI;AAAK,MAAA,SAAS,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA,aAXJ;AAAA;AAAA;AAAA;AAAA;AAAA,WADJ;AAeH,CA/BM;;GAAMT,S;UAGOJ,W,EACYC,Y;;;KAJnBG,S","sourcesContent":["import React, { useState } from \"react\";\nimport { Button, Input } from \"@components\";\nimport { useContract } from \"src/hooks/useContract\";\nimport { useWeb3React } from \"@web3-react/core\";\nimport { STAKING_ADDRESS } from \"src/constants\";\nimport StakingABI from \"src/abi/Staking.json\";\n\nexport const StakeMenu: React.FC<{ balance: string }> = ({ balance }) => {\n    const [amount, setAmount] = useState(\"0\");\n    const [loading, setLoading] = useState(false);\n    const staking = useContract(STAKING_ADDRESS, StakingABI, true);\n    const { active, account } = useWeb3React();\n\n    const stakeTokens = async () => {\n        console.log(\"hello\");\n        setLoading(true);\n        // try{\n        //     if (staking){\n        //         const tx = await staking.stake(amount, index)\n        //     }\n        // }\n    };\n\n    return (\n        <div className=\" flex \">\n            <div className=\"flex-1 border p-10\">\n                <Input\n                    label=\"Stake Amount\"\n                    id=\"amount\"\n                    placeholder=\"Amount\"\n                    value={amount}\n                    onChange={(e) => setAmount(e.target.value)}\n                />\n                <Button onClick={stakeTokens}>Stake</Button>\n            </div>\n            <div className=\"border p-10 flex-1\"></div>\n        </div>\n    );\n};\n"]},"metadata":{},"sourceType":"module"}