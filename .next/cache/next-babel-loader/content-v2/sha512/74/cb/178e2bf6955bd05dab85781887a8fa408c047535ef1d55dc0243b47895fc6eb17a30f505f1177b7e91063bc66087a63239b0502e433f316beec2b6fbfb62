{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\Arshia Dhiman\\\\Solidity-Staking-Project\\\\staking-frontend\\\\src\\\\components\\\\staking-pool\\\\index.tsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { TextItem } from \"@components\";\nimport { secondsToWeeks } from \"src/utils\";\nimport { Card, Button } from \"@components\";\nimport { Logo } from \"@components\";\nimport { StakeMenu } from \"@components\";\nimport { useContract } from \"src/hooks/useContract\";\nimport { STAKING_ADDRESS } from \"src/constants\";\nimport StakingABI from \"src/abi/Staking.json\";\nimport { useWeb3React } from \"@web3-react/core\";\nexport var StakingPool = function StakingPool(_ref) {\n  _s();\n\n  var pool = _ref.pool,\n      balance = _ref.balance,\n      id = _ref.id;\n\n  var _useState = useState(false),\n      showMenu = _useState[0],\n      setShowMenu = _useState[1];\n\n  var _useState2 = useState(\"0\"),\n      reward = _useState2[0],\n      setReward = _useState2[1];\n\n  var _useState3 = useState(\"0\"),\n      stakedAmount = _useState3[0],\n      setStakedAmount = _useState3[1];\n\n  var staking = useContract(STAKING_ADDRESS, StakingABI, true);\n\n  var _useWeb3React = useWeb3React(),\n      account = _useWeb3React.account;\n\n  var onClick = function onClick() {\n    setShowMenu(!showMenu);\n  };\n\n  useEffect(function () {\n    if (staking) {\n      staking.calculateReward(pool.id, account).then(function (reward) {\n        return setReward(reward.toString());\n      });\n      staking.getAmountStaked(pool.id, account).then(function (stakedAmount) {\n        return setStakedAmount(stakedAmount.toString());\n      });\n    }\n  }, [staking]);\n  return /*#__PURE__*/_jsxDEV(Card, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex space-x-10 px-4 py-2 items-center\",\n      children: [/*#__PURE__*/_jsxDEV(Logo, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, _this), /*#__PURE__*/_jsxDEV(TextItem, {\n        title: \"Name\",\n        text: pool.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }, _this), /*#__PURE__*/_jsxDEV(TextItem, {\n        title: \"Reward\",\n        text: pool.rewardRate + \" %\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }, _this), /*#__PURE__*/_jsxDEV(TextItem, {\n        title: \"Lock Period\",\n        text: Math.round(secondsToWeeks(pool.lockPeriod)).toString() + \" weeks\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }, _this), /*#__PURE__*/_jsxDEV(TextItem, {\n        title: \"Total Staked\",\n        text: parseInt(pool.totalStaked) / 1000000000000000000 + \" ARSH\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }, _this), /*#__PURE__*/_jsxDEV(Button, {\n        className: \"\",\n        onClick: onClick,\n        children: /*#__PURE__*/_jsxDEV(\"svg\", {\n          xmlns: \"http://www.w3.org/2000/svg\",\n          className: \"h-6 w-6\",\n          fill: \"none\",\n          viewBox: \"0 0 24 24\",\n          stroke: \"currentColor\",\n          children: /*#__PURE__*/_jsxDEV(\"path\", {\n            strokeLinecap: \"round\",\n            strokeLinejoin: \"round\",\n            strokeWidth: 2,\n            d: showMenu ? \"M5 15l7-7 7 7\" : \"M19 9l-7 7-7-7\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 25\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 21\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, _this), showMenu && /*#__PURE__*/_jsxDEV(StakeMenu, {\n      pool: pool,\n      id: pool.id,\n      balance: balance,\n      reward: reward,\n      stakedAmount: stakedAmount\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 17\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 9\n  }, _this);\n};\n\n_s(StakingPool, \"f/t9UxoNNc/9lHZLqCtJq0XUDYc=\", false, function () {\n  return [useContract, useWeb3React];\n});\n\n_c = StakingPool;\n\nvar _c;\n\n$RefreshReg$(_c, \"StakingPool\");","map":{"version":3,"sources":["C:/Users/Arshia Dhiman/Solidity-Staking-Project/staking-frontend/src/components/staking-pool/index.tsx"],"names":["React","useState","useEffect","TextItem","secondsToWeeks","Card","Button","Logo","StakeMenu","useContract","STAKING_ADDRESS","StakingABI","useWeb3React","StakingPool","pool","balance","id","showMenu","setShowMenu","reward","setReward","stakedAmount","setStakedAmount","staking","account","onClick","calculateReward","then","toString","getAmountStaked","name","rewardRate","Math","round","lockPeriod","parseInt","totalStaked"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { TextItem } from \"@components\";\nimport { secondsToWeeks } from \"src/utils\";\nimport { Card, Button } from \"@components\";\nimport { Logo } from \"@components\";\nimport { PoolProps } from \"src/ts/interfaces\";\nimport { StakeMenu } from \"@components\";\nimport { useContract } from \"src/hooks/useContract\";\nimport { STAKING_ADDRESS } from \"src/constants\";\nimport StakingABI from \"src/abi/Staking.json\";\nimport { useWeb3React } from \"@web3-react/core\";\nimport { useRouter } from \"next/dist/client/router\";\n\nexport const StakingPool: React.FC<PoolProps> = ({ pool, balance, id }) => {\n    const [showMenu, setShowMenu] = useState(false);\n    const [reward, setReward] = useState(\"0\");\n    const [stakedAmount, setStakedAmount] = useState(\"0\");\n    const staking = useContract(STAKING_ADDRESS, StakingABI, true);\n    const { account } = useWeb3React();\n\n    const onClick = () => {\n        setShowMenu(!showMenu);\n    };\n\n    useEffect(() => {\n        if (staking) {\n            staking\n                .calculateReward(pool.id, account)\n                .then((reward: string) => setReward(reward.toString()));\n\n            staking\n                .getAmountStaked(pool.id, account)\n                .then((stakedAmount: string) =>\n                    setStakedAmount(stakedAmount.toString()),\n                );\n        }\n    }, [staking]);\n\n    return (\n        <Card>\n            <div className=\"flex space-x-10 px-4 py-2 items-center\">\n                <Logo />\n\n                <TextItem title={\"Name\"} text={pool.name} />\n\n                <TextItem title={\"Reward\"} text={pool.rewardRate + \" %\"} />\n\n                <TextItem\n                    title={\"Lock Period\"}\n                    text={\n                        Math.round(secondsToWeeks(pool.lockPeriod)).toString() +\n                        \" weeks\"\n                    }\n                />\n\n                <TextItem\n                    title={\"Total Staked\"}\n                    text={\n                        parseInt(pool.totalStaked) / 1000000000000000000 +\n                        \" ARSH\"\n                    }\n                />\n                <Button className=\"\" onClick={onClick}>\n                    <svg\n                        xmlns=\"http://www.w3.org/2000/svg\"\n                        className=\"h-6 w-6\"\n                        fill=\"none\"\n                        viewBox=\"0 0 24 24\"\n                        stroke=\"currentColor\"\n                    >\n                        <path\n                            strokeLinecap=\"round\"\n                            strokeLinejoin=\"round\"\n                            strokeWidth={2}\n                            d={showMenu ? \"M5 15l7-7 7 7\" : \"M19 9l-7 7-7-7\"}\n                        />\n                    </svg>\n                </Button>\n            </div>\n            {showMenu && (\n                <StakeMenu\n                    pool={pool}\n                    id={pool.id}\n                    balance={balance}\n                    reward={reward}\n                    stakedAmount={stakedAmount}\n                />\n            )}\n        </Card>\n    );\n};\n"]},"metadata":{},"sourceType":"module"}