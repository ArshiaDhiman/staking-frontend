{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _regeneratorRuntime from \"C:/Users/Arshia Dhiman/Solidity-Staking-Project/staking-frontend/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"C:/Users/Arshia Dhiman/Solidity-Staking-Project/staking-frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\Arshia Dhiman\\\\Solidity-Staking-Project\\\\staking-frontend\\\\src\\\\components\\\\stake-menu\\\\index.tsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { Button, Input } from \"@components\";\nimport { useContract } from \"src/hooks/useContract\";\nimport { useWeb3React } from \"@web3-react/core\";\nimport { STAKING_ADDRESS, TOKEN_ADDRESS, LARGEST_NUM } from \"src/constants\";\nimport StakingABI from \"src/abi/Staking.json\";\nimport TokenABI from \"src/abi/Token.json\";\nimport { numberToWei, parseBalance } from \"src/utils\";\nimport { useRouter } from \"next/dist/client/router\";\nexport var stakeMenuLeft = function stakeMenuLeft() {\n  var stakeTokens = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var _token, tx, _tx;\n\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              setLoading(true);\n              _context.prev = 1;\n\n              if (!(allowance === \"0\")) {\n                _context.next = 10;\n                break;\n              }\n\n              _context.next = 5;\n              return (_token = token) === null || _token === void 0 ? void 0 : _token.approve(STAKING_ADDRESS, LARGEST_NUM);\n\n            case 5:\n              tx = _context.sent;\n              _context.next = 8;\n              return tx.wait();\n\n            case 8:\n              _context.next = 16;\n              break;\n\n            case 10:\n              if (!staking) {\n                _context.next = 16;\n                break;\n              }\n\n              _context.next = 13;\n              return staking.stake(numberToWei(amount), id);\n\n            case 13:\n              _tx = _context.sent;\n              _context.next = 16;\n              return _tx.wait();\n\n            case 16:\n              router.push(router.asPath);\n              setAmount(\"\");\n              _context.next = 23;\n              break;\n\n            case 20:\n              _context.prev = 20;\n              _context.t0 = _context[\"catch\"](1);\n              console.log(_context.t0);\n\n            case 23:\n              setLoading(false);\n\n            case 24:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[1, 20]]);\n    }));\n\n    return function stakeTokens() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex-1 border space-y-2\",\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"text-base text-gray-300\",\n      children: [\"Amount After Stake : \", /*#__PURE__*/_jsxDEV(\"strong\", {\n        children: \"amount\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 38\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, _this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"text-base text-gray-300\",\n      children: [\"New Estimated Reward : \", /*#__PURE__*/_jsxDEV(\"strong\", {\n        children: \"amount\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 40\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Input, {\n        label: \"Stake Amount\",\n        id: \"amount\",\n        placeholder: \"Amount\",\n        value: amount,\n        type: \"number\",\n        onChange: function onChange(e) {\n          return setAmount(e.target.value);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }, _this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: stakeTokens,\n        className: \"w-full\",\n        loading: loading,\n        children: allowance !== \"0\" ? \"Stake\" : \"Enable\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 9\n  }, _this);\n};\nexport var StakeMenu = function StakeMenu(_ref2) {\n  _s();\n\n  var balance = _ref2.balance,\n      id = _ref2.id;\n\n  var _useState = useState(\"0\"),\n      amount = _useState[0],\n      setAmount = _useState[1];\n\n  var _useState2 = useState(false),\n      loading = _useState2[0],\n      setLoading = _useState2[1];\n\n  var _useState3 = useState(\"0\"),\n      allowance = _useState3[0],\n      setAllowance = _useState3[1];\n\n  var staking = useContract(STAKING_ADDRESS, StakingABI, true);\n  var token = useContract(TOKEN_ADDRESS, TokenABI, true);\n\n  var _useWeb3React = useWeb3React(),\n      active = _useWeb3React.active,\n      account = _useWeb3React.account;\n\n  var router = useRouter();\n\n  var redeemTokens = /*#__PURE__*/function () {\n    var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n      var tx;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              setLoading(true);\n              _context2.prev = 1;\n\n              if (!staking) {\n                _context2.next = 8;\n                break;\n              }\n\n              _context2.next = 5;\n              return staking === null || staking === void 0 ? void 0 : staking.unstake(id);\n\n            case 5:\n              tx = _context2.sent;\n              _context2.next = 8;\n              return tx.wait();\n\n            case 8:\n              _context2.next = 13;\n              break;\n\n            case 10:\n              _context2.prev = 10;\n              _context2.t0 = _context2[\"catch\"](1);\n              console.log(_context2.t0);\n\n            case 13:\n              setLoading(false);\n\n            case 14:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2, null, [[1, 10]]);\n    }));\n\n    return function redeemTokens() {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n\n  useEffect(function () {\n    if (token) {\n      token.allowance(account, STAKING_ADDRESS).then(function (allowance) {\n        return setAllowance(allowance.toString());\n      });\n    }\n  }, [token]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"text-center border\",\n      children: [\"Avalible : \", parseBalance(active ? balance : 0), \" ARSH\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 13\n    }, _this), /*#__PURE__*/_jsxDEV(\"stakeMenuLeft\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 13\n    }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex p-6 space-x-6 border rounded-b-lg\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"border flex-1 space-y-2\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-base text-gray-300\",\n          children: [\"Amount Staked : \", /*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"amount\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 41\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 21\n        }, _this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-base text-gray-300\",\n          children: [\"Rewards Earned : \", /*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"amount\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 42\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 21\n        }, _this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: redeemTokens,\n          className: \"w-full\",\n          loading: loading,\n          children: \"Redeem\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 21\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 17\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 13\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 94,\n    columnNumber: 9\n  }, _this);\n};\n\n_s(StakeMenu, \"pA/WDWDg/wfaQrCYLNiy7SfrzZw=\", false, function () {\n  return [useContract, useContract, useWeb3React, useRouter];\n});\n\n_c = StakeMenu;\n\nvar _c;\n\n$RefreshReg$(_c, \"StakeMenu\");","map":{"version":3,"sources":["C:/Users/Arshia Dhiman/Solidity-Staking-Project/staking-frontend/src/components/stake-menu/index.tsx"],"names":["React","useState","useEffect","Button","Input","useContract","useWeb3React","STAKING_ADDRESS","TOKEN_ADDRESS","LARGEST_NUM","StakingABI","TokenABI","numberToWei","parseBalance","useRouter","stakeMenuLeft","stakeTokens","setLoading","allowance","token","approve","tx","wait","staking","stake","amount","id","router","push","asPath","setAmount","console","log","e","target","value","loading","StakeMenu","balance","setAllowance","active","account","redeemTokens","unstake","then","toString"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,MAAT,EAAiBC,KAAjB,QAA8B,aAA9B;AACA,SAASC,WAAT,QAA4B,uBAA5B;AACA,SAASC,YAAT,QAA6B,kBAA7B;AACA,SAASC,eAAT,EAA0BC,aAA1B,EAAyCC,WAAzC,QAA4D,eAA5D;AAEA,OAAOC,UAAP,MAAuB,sBAAvB;AACA,OAAOC,QAAP,MAAqB,oBAArB;AACA,SAASC,WAAT,EAAsBC,YAAtB,QAA0C,WAA1C;AACA,SAASC,SAAT,QAA0B,yBAA1B;AAEA,OAAO,IAAMC,aAAuB,GAAG,SAA1BA,aAA0B,GAAM;AACzC,MAAMC,WAAW;AAAA,wEAAG;AAAA;;AAAA;AAAA;AAAA;AAAA;AAChBC,cAAAA,UAAU,CAAC,IAAD,CAAV;AADgB;;AAAA,oBAGRC,SAAS,KAAK,GAHN;AAAA;AAAA;AAAA;;AAAA;AAAA,+BAISC,KAJT,2CAIS,OAAOC,OAAP,CAAeb,eAAf,EAAgCE,WAAhC,CAJT;;AAAA;AAIFY,cAAAA,EAJE;AAAA;AAAA,qBAKFA,EAAE,CAACC,IAAH,EALE;;AAAA;AAAA;AAAA;;AAAA;AAAA,mBAOJC,OAPI;AAAA;AAAA;AAAA;;AAAA;AAAA,qBAQaA,OAAO,CAACC,KAAR,CAAcZ,WAAW,CAACa,MAAD,CAAzB,EAAmCC,EAAnC,CARb;;AAAA;AAQEL,cAAAA,GARF;AAAA;AAAA,qBASEA,GAAE,CAACC,IAAH,EATF;;AAAA;AAYZK,cAAAA,MAAM,CAACC,IAAP,CAAYD,MAAM,CAACE,MAAnB;AACAC,cAAAA,SAAS,CAAC,EAAD,CAAT;AAbY;AAAA;;AAAA;AAAA;AAAA;AAeZC,cAAAA,OAAO,CAACC,GAAR;;AAfY;AAiBhBf,cAAAA,UAAU,CAAC,KAAD,CAAV;;AAjBgB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAH;;AAAA,oBAAXD,WAAW;AAAA;AAAA;AAAA,KAAjB;;AAmBA,sBACI;AAAK,IAAA,SAAS,EAAC,yBAAf;AAAA,4BACI;AAAG,MAAA,SAAS,EAAC,yBAAb;AAAA,uDACyB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADzB;AAAA;AAAA;AAAA;AAAA;AAAA,aADJ,eAII;AAAG,MAAA,SAAS,EAAC,yBAAb;AAAA,yDAC2B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAD3B;AAAA;AAAA;AAAA;AAAA;AAAA,aAJJ,eAOI;AAAA,8BACI,QAAC,KAAD;AACI,QAAA,KAAK,EAAC,cADV;AAEI,QAAA,EAAE,EAAC,QAFP;AAGI,QAAA,WAAW,EAAC,QAHhB;AAII,QAAA,KAAK,EAAES,MAJX;AAKI,QAAA,IAAI,EAAC,QALT;AAMI,QAAA,QAAQ,EAAE,kBAACQ,CAAD;AAAA,iBAAOH,SAAS,CAACG,CAAC,CAACC,MAAF,CAASC,KAAV,CAAhB;AAAA;AANd;AAAA;AAAA;AAAA;AAAA,eADJ,eASI,QAAC,MAAD;AACI,QAAA,OAAO,EAAEnB,WADb;AAEI,QAAA,SAAS,EAAC,QAFd;AAGI,QAAA,OAAO,EAAEoB,OAHb;AAAA,kBAKKlB,SAAS,KAAK,GAAd,GAAoB,OAApB,GAA8B;AALnC;AAAA;AAAA;AAAA;AAAA,eATJ;AAAA;AAAA;AAAA;AAAA;AAAA,aAPJ;AAAA;AAAA;AAAA;AAAA;AAAA,WADJ;AA2BH,CA/CM;AAiDP,OAAO,IAAMmB,SAA8B,GAAG,SAAjCA,SAAiC,QAAqB;AAAA;;AAAA,MAAlBC,OAAkB,SAAlBA,OAAkB;AAAA,MAATZ,EAAS,SAATA,EAAS;;AAAA,kBACnCzB,QAAQ,CAAC,GAAD,CAD2B;AAAA,MACxDwB,MADwD;AAAA,MAChDK,SADgD;;AAAA,mBAEjC7B,QAAQ,CAAC,KAAD,CAFyB;AAAA,MAExDmC,OAFwD;AAAA,MAE/CnB,UAF+C;;AAAA,mBAG7BhB,QAAQ,CAAC,GAAD,CAHqB;AAAA,MAGxDiB,SAHwD;AAAA,MAG7CqB,YAH6C;;AAI/D,MAAMhB,OAAO,GAAGlB,WAAW,CAACE,eAAD,EAAkBG,UAAlB,EAA8B,IAA9B,CAA3B;AACA,MAAMS,KAAK,GAAGd,WAAW,CAACG,aAAD,EAAgBG,QAAhB,EAA0B,IAA1B,CAAzB;;AAL+D,sBAMnCL,YAAY,EANuB;AAAA,MAMvDkC,MANuD,iBAMvDA,MANuD;AAAA,MAM/CC,OAN+C,iBAM/CA,OAN+C;;AAO/D,MAAMd,MAAM,GAAGb,SAAS,EAAxB;;AAEA,MAAM4B,YAAY;AAAA,yEAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AACjBzB,cAAAA,UAAU,CAAC,IAAD,CAAV;AADiB;;AAAA,mBAGTM,OAHS;AAAA;AAAA;AAAA;;AAAA;AAAA,qBAIQA,OAJR,aAIQA,OAJR,uBAIQA,OAAO,CAAEoB,OAAT,CAAiBjB,EAAjB,CAJR;;AAAA;AAIHL,cAAAA,EAJG;AAAA;AAAA,qBAKHA,EAAE,CAACC,IAAH,EALG;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAQbS,cAAAA,OAAO,CAACC,GAAR;;AARa;AAUjBf,cAAAA,UAAU,CAAC,KAAD,CAAV;;AAViB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAH;;AAAA,oBAAZyB,YAAY;AAAA;AAAA;AAAA,KAAlB;;AAaAxC,EAAAA,SAAS,CAAC,YAAM;AACZ,QAAIiB,KAAJ,EAAW;AACPA,MAAAA,KAAK,CACAD,SADL,CACeuB,OADf,EACwBlC,eADxB,EAEKqC,IAFL,CAEU,UAAC1B,SAAD;AAAA,eACFqB,YAAY,CAACrB,SAAS,CAAC2B,QAAV,EAAD,CADV;AAAA,OAFV;AAKH;AACJ,GARQ,EAQN,CAAC1B,KAAD,CARM,CAAT;AAUA,sBACI;AAAA,4BACI;AAAK,MAAA,SAAS,EAAC,oBAAf;AAAA,gCACgBN,YAAY,CAAC2B,MAAM,GAAGF,OAAH,GAAa,CAApB,CAD5B;AAAA;AAAA;AAAA;AAAA;AAAA,aADJ,eAII;AAAA;AAAA;AAAA;AAAA,aAJJ,eAKI;AAAK,MAAA,SAAS,EAAC,wCAAf;AAAA,6BACI;AAAK,QAAA,SAAS,EAAC,yBAAf;AAAA,gCACI;AAAG,UAAA,SAAS,EAAC,yBAAb;AAAA,sDACoB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADpB;AAAA;AAAA;AAAA;AAAA;AAAA,iBADJ,eAKI;AAAG,UAAA,SAAS,EAAC,yBAAb;AAAA,uDACqB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADrB;AAAA;AAAA;AAAA;AAAA;AAAA,iBALJ,eASI,QAAC,MAAD;AACI,UAAA,OAAO,EAAEI,YADb;AAEI,UAAA,SAAS,EAAC,QAFd;AAGI,UAAA,OAAO,EAAEN,OAHb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBATJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,aALJ;AAAA;AAAA;AAAA;AAAA;AAAA,WADJ;AA2BH,CA3DM;;GAAMC,S;UAIOhC,W,EACFA,W,EACcC,Y,EACbQ,S;;;KAPNuB,S","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { Button, Input } from \"@components\";\nimport { useContract } from \"src/hooks/useContract\";\nimport { useWeb3React } from \"@web3-react/core\";\nimport { STAKING_ADDRESS, TOKEN_ADDRESS, LARGEST_NUM } from \"src/constants\";\nimport { PoolProps } from \"src/ts/interfaces\";\nimport StakingABI from \"src/abi/Staking.json\";\nimport TokenABI from \"src/abi/Token.json\";\nimport { numberToWei, parseBalance } from \"src/utils\";\nimport { useRouter } from \"next/dist/client/router\";\n\nexport const stakeMenuLeft: React.FC = () => {\n    const stakeTokens = async () => {\n        setLoading(true);\n        try {\n            if (allowance === \"0\") {\n                const tx = await token?.approve(STAKING_ADDRESS, LARGEST_NUM);\n                await tx.wait();\n            } else {\n                if (staking) {\n                    const tx = await staking.stake(numberToWei(amount), id);\n                    await tx.wait();\n                }\n            }\n            router.push(router.asPath);\n            setAmount(\"\");\n        } catch (err) {\n            console.log(err);\n        }\n        setLoading(false);\n    };\n    return (\n        <div className=\"flex-1 border space-y-2\">\n            <p className=\"text-base text-gray-300\">\n                Amount After Stake : <strong>amount</strong>\n            </p>\n            <p className=\"text-base text-gray-300\">\n                New Estimated Reward : <strong>amount</strong>\n            </p>\n            <div>\n                <Input\n                    label=\"Stake Amount\"\n                    id=\"amount\"\n                    placeholder=\"Amount\"\n                    value={amount}\n                    type=\"number\"\n                    onChange={(e) => setAmount(e.target.value)}\n                />\n                <Button\n                    onClick={stakeTokens}\n                    className=\"w-full\"\n                    loading={loading}\n                >\n                    {allowance !== \"0\" ? \"Stake\" : \"Enable\"}\n                </Button>\n            </div>\n        </div>\n    );\n};\n\nexport const StakeMenu: React.FC<PoolProps> = ({ balance, id }) => {\n    const [amount, setAmount] = useState(\"0\");\n    const [loading, setLoading] = useState(false);\n    const [allowance, setAllowance] = useState(\"0\");\n    const staking = useContract(STAKING_ADDRESS, StakingABI, true);\n    const token = useContract(TOKEN_ADDRESS, TokenABI, true);\n    const { active, account } = useWeb3React();\n    const router = useRouter();\n\n    const redeemTokens = async () => {\n        setLoading(true);\n        try {\n            if (staking) {\n                const tx = await staking?.unstake(id);\n                await tx.wait();\n            }\n        } catch (err) {\n            console.log(err);\n        }\n        setLoading(false);\n    };\n\n    useEffect(() => {\n        if (token) {\n            token\n                .allowance(account, STAKING_ADDRESS)\n                .then((allowance: string) =>\n                    setAllowance(allowance.toString()),\n                );\n        }\n    }, [token]);\n\n    return (\n        <div>\n            <div className=\"text-center border\">\n                Avalible : {parseBalance(active ? balance : 0)} ARSH\n            </div>\n            <stakeMenuLeft />\n            <div className=\"flex p-6 space-x-6 border rounded-b-lg\">\n                <div className=\"border flex-1 space-y-2\">\n                    <p className=\"text-base text-gray-300\">\n                        Amount Staked : <strong>amount</strong>\n                    </p>\n\n                    <p className=\"text-base text-gray-300\">\n                        Rewards Earned : <strong>amount</strong>\n                    </p>\n\n                    <Button\n                        onClick={redeemTokens}\n                        className=\"w-full\"\n                        loading={loading}\n                    >\n                        Redeem\n                    </Button>\n                </div>\n            </div>\n        </div>\n    );\n};\n"]},"metadata":{},"sourceType":"module"}