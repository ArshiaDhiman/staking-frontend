{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\Arshia Dhiman\\\\Solidity-Staking-Project\\\\staking-frontend\\\\src\\\\components\\\\stake-menu\\\\index.tsx\";\nimport React, { useState } from \"react\";\nimport { Button, Input } from \"@components\";\nimport { useContract } from \"src/hooks/useContract\";\nimport { useWeb3React } from \"@web3-react/core\";\nimport { STAKING_ADDRESS } from \"src/constants\";\nimport StakingABI from \"src/abi/Staking.json\";\nimport { numberToWei, parseBalance } from \"src/utils\";\nexport const StakeMenu = ({\n  balance,\n  id\n}) => {\n  const {\n    0: amount,\n    1: setAmount\n  } = useState(\"0\");\n  const {\n    0: loading,\n    1: setLoading\n  } = useState(false);\n  const staking = useContract(STAKING_ADDRESS, StakingABI, true);\n  const {\n    active,\n    account\n  } = useWeb3React();\n\n  const stakeTokens = async () => {\n    setLoading(true);\n\n    try {\n      if (staking) {\n        const tx = await staking.stake(numberToWei(amount), id);\n        await tx.wait();\n      }\n    } catch (err) {\n      console.log(err);\n    }\n\n    setLoading(false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [active && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"text-center border\",\n      children: [\"Avalible : \", parseBalance(balance), \" Arsh\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex-1 border p-10\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-sm text-gray-300\",\n            children: [\"Amount Staked :\", \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n            className: \"text-base\",\n            children: /*#__PURE__*/_jsxDEV(\"strong\", {\n              children: text\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 45,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Input, {\n          label: \"Stake Amount\",\n          id: \"amount\",\n          placeholder: \"Amount\",\n          value: amount,\n          onChange: e => setAmount(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: stakeTokens,\n          loading: loading,\n          children: \"Stake\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"border p-10 flex-1\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 9\n  }, this);\n};","map":{"version":3,"sources":["C:/Users/Arshia Dhiman/Solidity-Staking-Project/staking-frontend/src/components/stake-menu/index.tsx"],"names":["React","useState","Button","Input","useContract","useWeb3React","STAKING_ADDRESS","StakingABI","numberToWei","parseBalance","StakeMenu","balance","id","amount","setAmount","loading","setLoading","staking","active","account","stakeTokens","tx","stake","wait","err","console","log","text","e","target","value"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,MAAT,EAAiBC,KAAjB,QAA8B,aAA9B;AACA,SAASC,WAAT,QAA4B,uBAA5B;AACA,SAASC,YAAT,QAA6B,kBAA7B;AACA,SAASC,eAAT,QAAgC,eAAhC;AACA,OAAOC,UAAP,MAAuB,sBAAvB;AACA,SAASC,WAAT,EAAsBC,YAAtB,QAA0C,WAA1C;AAEA,OAAO,MAAMC,SAAoD,GAAG,CAAC;AACjEC,EAAAA,OADiE;AAEjEC,EAAAA;AAFiE,CAAD,KAG9D;AACF,QAAM;AAAA,OAACC,MAAD;AAAA,OAASC;AAAT,MAAsBb,QAAQ,CAAC,GAAD,CAApC;AACA,QAAM;AAAA,OAACc,OAAD;AAAA,OAAUC;AAAV,MAAwBf,QAAQ,CAAC,KAAD,CAAtC;AACA,QAAMgB,OAAO,GAAGb,WAAW,CAACE,eAAD,EAAkBC,UAAlB,EAA8B,IAA9B,CAA3B;AACA,QAAM;AAAEW,IAAAA,MAAF;AAAUC,IAAAA;AAAV,MAAsBd,YAAY,EAAxC;;AAEA,QAAMe,WAAW,GAAG,YAAY;AAC5BJ,IAAAA,UAAU,CAAC,IAAD,CAAV;;AACA,QAAI;AACA,UAAIC,OAAJ,EAAa;AACT,cAAMI,EAAE,GAAG,MAAMJ,OAAO,CAACK,KAAR,CAAcd,WAAW,CAACK,MAAD,CAAzB,EAAmCD,EAAnC,CAAjB;AACA,cAAMS,EAAE,CAACE,IAAH,EAAN;AACH;AACJ,KALD,CAKE,OAAOC,GAAP,EAAY;AACVC,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACH;;AACDR,IAAAA,UAAU,CAAC,KAAD,CAAV;AACH,GAXD;;AAaA,sBACI;AAAA,eACKE,MAAM,iBACH;AAAK,MAAA,SAAS,EAAC,oBAAf;AAAA,gCACgBT,YAAY,CAACE,OAAD,CAD5B;AAAA;AAAA;AAAA;AAAA;AAAA,YAFR,eAMI;AAAK,MAAA,SAAS,EAAC,MAAf;AAAA,8BACI;AAAK,QAAA,SAAS,EAAC,oBAAf;AAAA,gCACI;AAAA,kCACI;AAAG,YAAA,SAAS,EAAC,uBAAb;AAAA,0CACoB,GADpB;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAII;AAAI,YAAA,SAAS,EAAC,WAAd;AAAA,mCACI;AAAA,wBAASgB;AAAT;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,kBAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eASI,QAAC,KAAD;AACI,UAAA,KAAK,EAAC,cADV;AAEI,UAAA,EAAE,EAAC,QAFP;AAGI,UAAA,WAAW,EAAC,QAHhB;AAII,UAAA,KAAK,EAAEd,MAJX;AAKI,UAAA,QAAQ,EAAGe,CAAD,IAAOd,SAAS,CAACc,CAAC,CAACC,MAAF,CAASC,KAAV;AAL9B;AAAA;AAAA;AAAA;AAAA,gBATJ,eAgBI,QAAC,MAAD;AAAQ,UAAA,OAAO,EAAEV,WAAjB;AAA8B,UAAA,OAAO,EAAEL,OAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAhBJ;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAqBI;AAAK,QAAA,SAAS,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA,cArBJ;AAAA;AAAA;AAAA;AAAA;AAAA,YANJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAgCH,CAtDM","sourcesContent":["import React, { useState } from \"react\";\nimport { Button, Input } from \"@components\";\nimport { useContract } from \"src/hooks/useContract\";\nimport { useWeb3React } from \"@web3-react/core\";\nimport { STAKING_ADDRESS } from \"src/constants\";\nimport StakingABI from \"src/abi/Staking.json\";\nimport { numberToWei, parseBalance } from \"src/utils\";\n\nexport const StakeMenu: React.FC<{ balance: string; id: number }> = ({\n    balance,\n    id,\n}) => {\n    const [amount, setAmount] = useState(\"0\");\n    const [loading, setLoading] = useState(false);\n    const staking = useContract(STAKING_ADDRESS, StakingABI, true);\n    const { active, account } = useWeb3React();\n\n    const stakeTokens = async () => {\n        setLoading(true);\n        try {\n            if (staking) {\n                const tx = await staking.stake(numberToWei(amount), id);\n                await tx.wait();\n            }\n        } catch (err) {\n            console.log(err);\n        }\n        setLoading(false);\n    };\n\n    return (\n        <div>\n            {active && (\n                <div className=\"text-center border\">\n                    Avalible : {parseBalance(balance)} Arsh\n                </div>\n            )}\n            <div className=\"flex\">\n                <div className=\"flex-1 border p-10\">\n                    <div>\n                        <p className=\"text-sm text-gray-300\">\n                            Amount Staked :{\" \"}\n                        </p>\n                        <h4 className=\"text-base\">\n                            <strong>{text}</strong>\n                        </h4>\n                    </div>\n                    <Input\n                        label=\"Stake Amount\"\n                        id=\"amount\"\n                        placeholder=\"Amount\"\n                        value={amount}\n                        onChange={(e) => setAmount(e.target.value)}\n                    />\n                    <Button onClick={stakeTokens} loading={loading}>\n                        Stake\n                    </Button>\n                </div>\n                <div className=\"border p-10 flex-1\"></div>\n            </div>\n        </div>\n    );\n};\n"]},"metadata":{},"sourceType":"module"}