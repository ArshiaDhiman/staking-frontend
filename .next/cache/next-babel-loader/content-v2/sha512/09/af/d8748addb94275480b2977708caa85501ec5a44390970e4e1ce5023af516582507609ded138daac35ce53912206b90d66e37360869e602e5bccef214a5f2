{"ast":null,"code":"import thunk from \"redux-thunk\";\nimport { applyMiddleware, combineReducers } from \"redux\";\nimport { configureStore } from \"@reduxjs/toolkit\";\nimport stakingSlice from \"./features/staking/stakingSlice\";\nvar reducer = combineReducers({\n  staking: stakingSlice\n});\nexport var store = configureStore(reducer, applyMiddleware(thunk)); // Infer the `RootState` and `AppDispatch` types from the store itself","map":{"version":3,"sources":["C:/Users/Arshia Dhiman/Solidity-Staking-Project/staking-frontend/src/store.ts"],"names":["thunk","applyMiddleware","combineReducers","configureStore","stakingSlice","reducer","staking","store"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,aAAlB;AACA,SAASC,eAAT,EAAuCC,eAAvC,QAA8D,OAA9D;AACA,SAASC,cAAT,QAA+B,kBAA/B;AACA,OAAOC,YAAP,MAAyB,iCAAzB;AAEA,IAAMC,OAAO,GAAGH,eAAe,CAAC;AAC5BI,EAAAA,OAAO,EAAEF;AADmB,CAAD,CAA/B;AAIA,OAAO,IAAMG,KAAK,GAAGJ,cAAc,CAACE,OAAD,EAAUJ,eAAe,CAACD,KAAD,CAAzB,CAA5B,C,CAEP","sourcesContent":["import thunk from \"redux-thunk\";\nimport { applyMiddleware, createStore, combineReducers } from \"redux\";\nimport { configureStore } from \"@reduxjs/toolkit\";\nimport stakingSlice from \"./features/staking/stakingSlice\";\n\nconst reducer = combineReducers({\n    staking: stakingSlice,\n});\n\nexport const store = configureStore(reducer, applyMiddleware(thunk));\n\n// Infer the `RootState` and `AppDispatch` types from the store itself\nexport type RootState = ReturnType<typeof store.getState>;\n// Inferred type: {posts: PostsState, comments: CommentsState, users: UsersState}\nexport type AppDispatch = typeof store.dispatch;\n"]},"metadata":{},"sourceType":"module"}