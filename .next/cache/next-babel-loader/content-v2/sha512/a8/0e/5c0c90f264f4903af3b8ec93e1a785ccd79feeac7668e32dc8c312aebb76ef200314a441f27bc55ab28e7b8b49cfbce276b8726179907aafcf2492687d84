{"ast":null,"code":"import _regeneratorRuntime from \"C:/Users/Arshia Dhiman/Solidity-Staking-Project/staking-frontend/node_modules/@babel/runtime/regenerator\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _asyncToGenerator from \"C:/Users/Arshia Dhiman/Solidity-Staking-Project/staking-frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\Arshia Dhiman\\\\Solidity-Staking-Project\\\\staking-frontend\\\\src\\\\components\\\\main\\\\index.tsx\",\n    _this = this;\n\nimport React, { useState, useEffect } from \"react\";\nimport { Show, Pools } from \"@components\";\nimport { useContract } from \"src/hooks/useContract\";\nimport { STAKING_ADDRESS, TOKEN_ADDRESS } from \"src/constants\";\nimport TokenABI from \"src/abi/Token.json\";\nimport StakingABI from \"src/abi/Staking.json\";\nimport { useWeb3React } from \"@web3-react/core\";\nexport var Main = /*#__PURE__*/function () {\n  var _s = $RefreshSig$();\n\n  var _ref2 = _asyncToGenerator(_s( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(_ref) {\n    var pools, _useState, balance, setBalance, token, staking, _useWeb3React, active, account, tokenBalance;\n\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _s();\n\n            pools = _ref.pools;\n            _useState = useState(\"\"), balance = _useState[0], setBalance = _useState[1];\n            token = useContract(TOKEN_ADDRESS, TokenABI, true);\n            staking = useContract(STAKING_ADDRESS, StakingABI, true);\n            _useWeb3React = useWeb3React(), active = _useWeb3React.active, account = _useWeb3React.account;\n            _context.next = 8;\n            return token.balanceOf(account);\n\n          case 8:\n            tokenBalance = _context.sent;\n            useEffect(function () {\n              console.log(\"useEffect ran\");\n              console.log(tokenBalance);\n            });\n            return _context.abrupt(\"return\", /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"py-12 min-h-screen\",\n              children: [/*#__PURE__*/_jsxDEV(Show, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 24,\n                columnNumber: 13\n              }, _this), /*#__PURE__*/_jsxDEV(Pools, {\n                pools: pools\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 25,\n                columnNumber: 13\n              }, _this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 23,\n              columnNumber: 9\n            }, _this));\n\n          case 11:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }), \"w/v5Lh4YZDrt370uTnOIXQ5KqX4=\", false, function () {\n    return [useContract, useContract, useWeb3React];\n  }));\n\n  return function Main(_x) {\n    return _ref2.apply(this, arguments);\n  };\n}(); // use effect - display the amount od arsh token\n// state variable  use state balance and set balance\n// need abi and address use Contract look at faucet\n// in the useEffect use tokencontract for balance and staking contract for staking\n// in useEffect call contract method for balance with users account as unput\n\n_c = Main;\n\nvar _c;\n\n$RefreshReg$(_c, \"Main\");","map":{"version":3,"sources":["C:/Users/Arshia Dhiman/Solidity-Staking-Project/staking-frontend/src/components/main/index.tsx"],"names":["React","useState","useEffect","Show","Pools","useContract","STAKING_ADDRESS","TOKEN_ADDRESS","TokenABI","StakingABI","useWeb3React","Main","pools","balance","setBalance","token","staking","active","account","balanceOf","tokenBalance","console","log"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AAEA,SAASC,IAAT,EAAeC,KAAf,QAA4B,aAA5B;AACA,SAASC,WAAT,QAA4B,uBAA5B;AACA,SAASC,eAAT,EAA0BC,aAA1B,QAA+C,eAA/C;AACA,OAAOC,QAAP,MAAqB,oBAArB;AACA,OAAOC,UAAP,MAAuB,sBAAvB;AACA,SAASC,YAAT,QAA6B,kBAA7B;AAEA,OAAO,IAAMC,IAA4B;AAAA;;AAAA,0EAAG;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;;AAASC,YAAAA,KAAT,QAASA,KAAT;AAAA,wBACVX,QAAQ,CAAC,EAAD,CADE,EACjCY,OADiC,iBACxBC,UADwB;AAElCC,YAAAA,KAFkC,GAE1BV,WAAW,CAACE,aAAD,EAAgBC,QAAhB,EAA0B,IAA1B,CAFe;AAGlCQ,YAAAA,OAHkC,GAGxBX,WAAW,CAACC,eAAD,EAAkBG,UAAlB,EAA8B,IAA9B,CAHa;AAAA,4BAIZC,YAAY,EAJA,EAIhCO,MAJgC,iBAIhCA,MAJgC,EAIxBC,OAJwB,iBAIxBA,OAJwB;AAAA;AAAA,mBAKbH,KAAK,CAACI,SAAN,CAAgBD,OAAhB,CALa;;AAAA;AAKlCE,YAAAA,YALkC;AAOxClB,YAAAA,SAAS,CAAC,YAAM;AACZmB,cAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ;AACAD,cAAAA,OAAO,CAACC,GAAR,CAAYF,YAAZ;AACH,aAHQ,CAAT;AAPwC,0DAapC;AAAK,cAAA,SAAS,EAAC,oBAAf;AAAA,sCACI,QAAC,IAAD;AAAA;AAAA;AAAA;AAAA,uBADJ,eAEI,QAAC,KAAD;AAAO,gBAAA,KAAK,EAAER;AAAd;AAAA;AAAA;AAAA;AAAA,uBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,qBAboC;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;AAAA,YAEvBP,WAFuB,EAGrBA,WAHqB,EAITK,YAJS;AAAA;;AAAA,kBAA5BC,IAA4B;AAAA;AAAA;AAAA,GAAlC,C,CAoBP;AACA;AACA;AACA;AACA;;KAxBaA,I","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { StakingProps } from \"src/ts/interfaces\";\nimport { Show, Pools } from \"@components\";\nimport { useContract } from \"src/hooks/useContract\";\nimport { STAKING_ADDRESS, TOKEN_ADDRESS } from \"src/constants\";\nimport TokenABI from \"src/abi/Token.json\";\nimport StakingABI from \"src/abi/Staking.json\";\nimport { useWeb3React } from \"@web3-react/core\";\n\nexport const Main: React.FC<StakingProps> = async ({ pools }) => {\n    const [balance, setBalance] = useState(\"\");\n    const token = useContract(TOKEN_ADDRESS, TokenABI, true);\n    const staking = useContract(STAKING_ADDRESS, StakingABI, true);\n    const { active, account } = useWeb3React();\n    const tokenBalance = await token.balanceOf(account);\n\n    useEffect(() => {\n        console.log(\"useEffect ran\");\n        console.log(tokenBalance);\n    });\n\n    return (\n        <div className=\"py-12 min-h-screen\">\n            <Show />\n            <Pools pools={pools} />\n        </div>\n    );\n};\n\n// use effect - display the amount od arsh token\n// state variable  use state balance and set balance\n// need abi and address use Contract look at faucet\n// in the useEffect use tokencontract for balance and staking contract for staking\n// in useEffect call contract method for balance with users account as unput\n"]},"metadata":{},"sourceType":"module"}