{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _regeneratorRuntime from \"C:/Users/Arshia Dhiman/Solidity-Staking-Project/staking-frontend/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"C:/Users/Arshia Dhiman/Solidity-Staking-Project/staking-frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\Arshia Dhiman\\\\Solidity-Staking-Project\\\\staking-frontend\\\\src\\\\components\\\\staking-pool\\\\stake-menu\\\\withdraw\\\\index.tsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { toast } from \"react-toastify\";\nimport StakingABI from \"@abi/Staking.json\";\nimport { Button } from \"@components\";\nimport { useContract } from \"@hooks/useContract\";\nimport { STAKING_ADDRESS } from \"@src/constants\";\nimport { parseBalance } from \"@src/utils\";\nimport { useWeb3React } from \"@web3-react/core\";\nexport var Withdraw = function Withdraw(_ref) {\n  _s();\n\n  var pool = _ref.pool;\n\n  var _useState = useState(false),\n      loading = _useState[0],\n      setLoading = _useState[1];\n\n  var staking = useContract(STAKING_ADDRESS, StakingABI, true);\n\n  var _useWeb3React = useWeb3React(),\n      active = _useWeb3React.active; // const router = useRouter();\n\n\n  var redeemTokens = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var tx, _err$data;\n\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              setLoading(true);\n              _context.prev = 1;\n\n              if (!staking) {\n                _context.next = 10;\n                break;\n              }\n\n              toast.info(\"Awaiting successful transaction\");\n              _context.next = 6;\n              return staking === null || staking === void 0 ? void 0 : staking.unstake(pool.id);\n\n            case 6:\n              tx = _context.sent;\n              _context.next = 9;\n              return tx.wait();\n\n            case 9:\n              toast.success(\"Success\");\n\n            case 10:\n              _context.next = 16;\n              break;\n\n            case 12:\n              _context.prev = 12;\n              _context.t0 = _context[\"catch\"](1);\n              console.log(_context.t0);\n              toast.error(((_err$data = _context.t0.data) === null || _err$data === void 0 ? void 0 : _err$data.message) || _context.t0.message);\n\n            case 16:\n              setLoading(false);\n\n            case 17:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[1, 12]]);\n    }));\n\n    return function redeemTokens() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex-1 space-y-2 relative\",\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"text-base text-gray-300\",\n      children: [\"Amount Staked\", \" \", /*#__PURE__*/_jsxDEV(\"strong\", {\n        className: \"text-white\",\n        children: [parseBalance(pool.user_stake), \" ARSH\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, _this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"text-base text-gray-300\",\n      children: [\"Rewards Earned\", \" \", /*#__PURE__*/_jsxDEV(\"strong\", {\n        className: \"text-white\",\n        children: [parseBalance(pool.user_reward), \" ARSH\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, _this), /*#__PURE__*/_jsxDEV(Button, {\n      onClick: redeemTokens,\n      className: \"w-full absolute inset-x-0 bottom-0\",\n      loading: loading,\n      disabled: !active,\n      children: \"Redeem\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 9\n  }, _this);\n};\n\n_s(Withdraw, \"W+ldCynhCvDt64ksBWwsThlmhYE=\", false, function () {\n  return [useContract, useWeb3React];\n});\n\n_c = Withdraw;\n\nvar _c;\n\n$RefreshReg$(_c, \"Withdraw\");","map":{"version":3,"sources":["C:/Users/Arshia Dhiman/Solidity-Staking-Project/staking-frontend/src/components/staking-pool/stake-menu/withdraw/index.tsx"],"names":["React","useState","toast","StakingABI","Button","useContract","STAKING_ADDRESS","parseBalance","useWeb3React","Withdraw","pool","loading","setLoading","staking","active","redeemTokens","info","unstake","id","tx","wait","success","console","log","error","data","message","user_stake","user_reward"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,KAAT,QAAsB,gBAAtB;AAEA,OAAOC,UAAP,MAAuB,mBAAvB;AACA,SAASC,MAAT,QAAuB,aAAvB;AACA,SAASC,WAAT,QAA4B,oBAA5B;AACA,SAASC,eAAT,QAAgC,gBAAhC;AACA,SAASC,YAAT,QAA6B,YAA7B;AACA,SAASC,YAAT,QAA6B,kBAA7B;AAGA,OAAO,IAAMC,QAEX,GAAG,SAFQA,QAER,OAAc;AAAA;;AAAA,MAAXC,IAAW,QAAXA,IAAW;;AAAA,kBACeT,QAAQ,CAAC,KAAD,CADvB;AAAA,MACRU,OADQ;AAAA,MACCC,UADD;;AAEf,MAAMC,OAAO,GAAGR,WAAW,CAACC,eAAD,EAAkBH,UAAlB,EAA8B,IAA9B,CAA3B;;AAFe,sBAGIK,YAAY,EAHhB;AAAA,MAGPM,MAHO,iBAGPA,MAHO,EAIf;;;AAEA,MAAMC,YAAY;AAAA,yEAAG;AAAA;;AAAA;AAAA;AAAA;AAAA;AACjBH,cAAAA,UAAU,CAAC,IAAD,CAAV;AADiB;;AAAA,mBAGTC,OAHS;AAAA;AAAA;AAAA;;AAITX,cAAAA,KAAK,CAACc,IAAN,CAAW,iCAAX;AAJS;AAAA,qBAKQH,OALR,aAKQA,OALR,uBAKQA,OAAO,CAAEI,OAAT,CAAiBP,IAAI,CAACQ,EAAtB,CALR;;AAAA;AAKHC,cAAAA,EALG;AAAA;AAAA,qBAMHA,EAAE,CAACC,IAAH,EANG;;AAAA;AAOTlB,cAAAA,KAAK,CAACmB,OAAN,CAAc,SAAd;;AAPS;AAAA;AAAA;;AAAA;AAAA;AAAA;AAYbC,cAAAA,OAAO,CAACC,GAAR;AACArB,cAAAA,KAAK,CAACsB,KAAN,CAAY,0BAAIC,IAAJ,wDAAUC,OAAV,KAAqB,YAAIA,OAArC;;AAba;AAejBd,cAAAA,UAAU,CAAC,KAAD,CAAV;;AAfiB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAH;;AAAA,oBAAZG,YAAY;AAAA;AAAA;AAAA,KAAlB;;AAiBA,sBACI;AAAK,IAAA,SAAS,EAAC,2BAAf;AAAA,4BACI;AAAG,MAAA,SAAS,EAAC,yBAAb;AAAA,kCACkB,GADlB,eAEI;AAAQ,QAAA,SAAS,EAAC,YAAlB;AAAA,mBACKR,YAAY,CAACG,IAAI,CAACiB,UAAN,CADjB;AAAA;AAAA;AAAA;AAAA;AAAA,eAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,aADJ,eAQI;AAAG,MAAA,SAAS,EAAC,yBAAb;AAAA,mCACmB,GADnB,eAEI;AAAQ,QAAA,SAAS,EAAC,YAAlB;AAAA,mBACKpB,YAAY,CAACG,IAAI,CAACkB,WAAN,CADjB;AAAA;AAAA;AAAA;AAAA;AAAA,eAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,aARJ,eAeI,QAAC,MAAD;AACI,MAAA,OAAO,EAAEb,YADb;AAEI,MAAA,SAAS,EAAC,oCAFd;AAGI,MAAA,OAAO,EAAEJ,OAHb;AAII,MAAA,QAAQ,EAAE,CAACG,MAJf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAfJ;AAAA;AAAA;AAAA;AAAA;AAAA,WADJ;AA0BH,CAnDM;;GAAML,Q;UAIOJ,W,EACGG,Y;;;KALVC,Q","sourcesContent":["import React, { useState } from \"react\";\nimport { toast } from \"react-toastify\";\n\nimport StakingABI from \"@abi/Staking.json\";\nimport { Button } from \"@components\";\nimport { useContract } from \"@hooks/useContract\";\nimport { STAKING_ADDRESS } from \"@src/constants\";\nimport { parseBalance } from \"@src/utils\";\nimport { useWeb3React } from \"@web3-react/core\";\nimport { Pool } from \"@ts/interfaces\";\n\nexport const Withdraw: React.FC<{\n    pool: Pool;\n}> = ({ pool }) => {\n    const [loading, setLoading] = useState(false);\n    const staking = useContract(STAKING_ADDRESS, StakingABI, true);\n    const { active } = useWeb3React();\n    // const router = useRouter();\n\n    const redeemTokens = async () => {\n        setLoading(true);\n        try {\n            if (staking) {\n                toast.info(\"Awaiting successful transaction\");\n                const tx = await staking?.unstake(pool.id);\n                await tx.wait();\n                toast.success(\"Success\");\n            }\n\n            // eslint-disable-next-line\n        } catch (err: any) {\n            console.log(err);\n            toast.error(err.data?.message || err.message);\n        }\n        setLoading(false);\n    };\n    return (\n        <div className=\"flex-1 space-y-2 relative\">\n            <p className=\"text-base text-gray-300\">\n                Amount Staked{\" \"}\n                <strong className=\"text-white\">\n                    {parseBalance(pool.user_stake)} ARSH\n                </strong>\n            </p>\n\n            <p className=\"text-base text-gray-300\">\n                Rewards Earned{\" \"}\n                <strong className=\"text-white\">\n                    {parseBalance(pool.user_reward)} ARSH\n                </strong>\n            </p>\n\n            <Button\n                onClick={redeemTokens}\n                className=\"w-full absolute inset-x-0 bottom-0\"\n                loading={loading}\n                disabled={!active}\n            >\n                Redeem\n            </Button>\n        </div>\n    );\n};\n"]},"metadata":{},"sourceType":"module"}