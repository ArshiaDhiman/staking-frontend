{"ast":null,"code":"import { Contract } from \"@ethersproject/contracts\";\nimport { InfuraProvider } from \"@ethersproject/providers\";\nvar library = new InfuraProvider(\"rinkeby\");\nexport function shortenHex(hex) {\n  var length = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 4;\n  return \"\".concat(hex.substring(0, length + 2), \"\\u2026\").concat(hex.substring(hex.length - length));\n}\nexport function getContract(address, ABI) {\n  return new Contract(address, ABI, library);\n}\nexport function secondsToWeeks(_seconds) {\n  var seconds = parseInt(_seconds);\n  var months = seconds / 604800;\n  return months;\n}","map":{"version":3,"sources":["C:/Users/Arshia Dhiman/Solidity-Staking-Project/staking-frontend/src/utils.ts"],"names":["Contract","InfuraProvider","library","shortenHex","hex","length","substring","getContract","address","ABI","secondsToWeeks","_seconds","seconds","parseInt","months"],"mappings":"AAAA,SAASA,QAAT,QAA4C,0BAA5C;AACA,SAASC,cAAT,QAA+B,0BAA/B;AAEA,IAAMC,OAAO,GAAG,IAAID,cAAJ,CAAmB,SAAnB,CAAhB;AAEA,OAAO,SAASE,UAAT,CAAoBC,GAApB,EAAqD;AAAA,MAApBC,MAAoB,uEAAX,CAAW;AACxD,mBAAUD,GAAG,CAACE,SAAJ,CAAc,CAAd,EAAiBD,MAAM,GAAG,CAA1B,CAAV,mBAA0CD,GAAG,CAACE,SAAJ,CACtCF,GAAG,CAACC,MAAJ,GAAaA,MADyB,CAA1C;AAGH;AAED,OAAO,SAASE,WAAT,CAAqBC,OAArB,EAAsCC,GAAtC,EAAwE;AAC3E,SAAO,IAAIT,QAAJ,CAAaQ,OAAb,EAAsBC,GAAtB,EAA2BP,OAA3B,CAAP;AACH;AAED,OAAO,SAASQ,cAAT,CAAwBC,QAAxB,EAAkD;AACrD,MAAMC,OAAO,GAAGC,QAAQ,CAACF,QAAD,CAAxB;AACA,MAAMG,MAAM,GAAGF,OAAO,GAAG,MAAzB;AACA,SAAOE,MAAP;AACH","sourcesContent":["import { Contract, ContractInterface } from \"@ethersproject/contracts\";\nimport { InfuraProvider } from \"@ethersproject/providers\";\n\nconst library = new InfuraProvider(\"rinkeby\");\n\nexport function shortenHex(hex: string, length = 4): string {\n    return `${hex.substring(0, length + 2)}â€¦${hex.substring(\n        hex.length - length,\n    )}`;\n}\n\nexport function getContract(address: string, ABI: ContractInterface): Contract {\n    return new Contract(address, ABI, library);\n}\n\nexport function secondsToWeeks(_seconds: string): number {\n    const seconds = parseInt(_seconds);\n    const months = seconds / 604800;\n    return months;\n}\n"]},"metadata":{},"sourceType":"module"}