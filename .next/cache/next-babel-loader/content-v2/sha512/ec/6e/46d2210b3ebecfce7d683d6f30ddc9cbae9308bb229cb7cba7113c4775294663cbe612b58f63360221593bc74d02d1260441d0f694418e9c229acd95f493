{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _regeneratorRuntime from \"C:/Users/Arshia Dhiman/Solidity-Staking-Project/staking-frontend/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"C:/Users/Arshia Dhiman/Solidity-Staking-Project/staking-frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\Arshia Dhiman\\\\Solidity-Staking-Project\\\\staking-frontend\\\\src\\\\components\\\\stake-menu\\\\index.tsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { Button, Input } from \"@components\";\nimport { useContract } from \"src/hooks/useContract\";\nimport { useWeb3React } from \"@web3-react/core\";\nimport { STAKING_ADDRESS, TOKEN_ADDRESS } from \"src/constants\";\nimport StakingABI from \"src/abi/Staking.json\";\nimport TokenABI from \"src/abi/Token.json\";\nimport { numberToWei, parseBalance } from \"src/utils\";\nexport var StakeMenu = function StakeMenu(_ref) {\n  _s();\n\n  var balance = _ref.balance,\n      id = _ref.id;\n\n  var _useState = useState(\"0\"),\n      amount = _useState[0],\n      setAmount = _useState[1];\n\n  var _useState2 = useState(false),\n      loading = _useState2[0],\n      setLoading = _useState2[1];\n\n  var _useState3 = useState(false),\n      allowance = _useState3[0],\n      setAllowance = _useState3[1];\n\n  var staking = useContract(STAKING_ADDRESS, StakingABI, true);\n  var token = useContract(TOKEN_ADDRESS, TokenABI, true);\n\n  var _useWeb3React = useWeb3React(),\n      active = _useWeb3React.active,\n      account = _useWeb3React.account;\n\n  var stakeTokens = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var tx;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              setLoading(true);\n              _context.prev = 1;\n\n              if (!staking) {\n                _context.next = 8;\n                break;\n              }\n\n              _context.next = 5;\n              return staking.stake(numberToWei(amount), id);\n\n            case 5:\n              tx = _context.sent;\n              _context.next = 8;\n              return tx.wait();\n\n            case 8:\n              _context.next = 13;\n              break;\n\n            case 10:\n              _context.prev = 10;\n              _context.t0 = _context[\"catch\"](1);\n              console.log(_context.t0);\n\n            case 13:\n              setLoading(false);\n\n            case 14:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[1, 10]]);\n    }));\n\n    return function stakeTokens() {\n      return _ref2.apply(this, arguments);\n    };\n  }(); // useEffect(() => {\n  //     if (token) {\n  //         token\n  //             .balanceOf(account)\n  //             .then((balance: string) => setBalance(balance.toString()));\n  //     }\n  // }, [token]);\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"text-center border\",\n      children: [\"Available : \", parseBalance(active ? balance : 0), \" ARSH\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex p-6 space-x-6 border rounded-b-lg\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex-1 border\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-base text-gray-300\",\n            children: [\"Amount After Stake : \", /*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"amount\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 53,\n              columnNumber: 50\n            }, _this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 25\n          }, _this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-base text-gray-300\",\n            children: [\"Rewards Earned : \", /*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"amount\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 46\n            }, _this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 25\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 21\n        }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"\",\n          children: [/*#__PURE__*/_jsxDEV(Input, {\n            label: \"Stake Amount\",\n            id: \"amount\",\n            placeholder: \"Amount\",\n            value: amount,\n            type: \"number\",\n            onChange: function onChange(e) {\n              return setAmount(e.target.value);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 25\n          }, _this), /*#__PURE__*/_jsxDEV(Button, {\n            className: \"w-full\",\n            onClick: stakeTokens,\n            loading: loading,\n            children: allowance ? \"Stake\" : \"Enable\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 25\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 21\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"border flex-1\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 17\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 9\n  }, _this);\n};\n/*\nallowance varable same as balance \nnew useeffect \nif allowance = 0 they havnt approved \ndisplay enable  and stake depending on allowance \nif they want to enable make a transaction just like stake owner can approve spender and amount  into contract\napproving the vesting contract address and amount \napprove the biggest amount \nmax approval amount as constant \n\"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\" largest number\nwhen not equal to zero you know they have approved */\n\n/* have an alllowance varable to set the state of allowance\nuse useEffect */\n\n_s(StakeMenu, \"/FwvgeLpuXbGc1H0v+1g4GT9YYM=\", false, function () {\n  return [useContract, useContract, useWeb3React];\n});\n\n_c = StakeMenu;\n\nvar _c;\n\n$RefreshReg$(_c, \"StakeMenu\");","map":{"version":3,"sources":["C:/Users/Arshia Dhiman/Solidity-Staking-Project/staking-frontend/src/components/stake-menu/index.tsx"],"names":["React","useState","Button","Input","useContract","useWeb3React","STAKING_ADDRESS","TOKEN_ADDRESS","StakingABI","TokenABI","numberToWei","parseBalance","StakeMenu","balance","id","amount","setAmount","loading","setLoading","allowance","setAllowance","staking","token","active","account","stakeTokens","stake","tx","wait","console","log","e","target","value"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { Button, Input } from \"@components\";\nimport { useContract } from \"src/hooks/useContract\";\nimport { useWeb3React } from \"@web3-react/core\";\nimport { STAKING_ADDRESS, TOKEN_ADDRESS } from \"src/constants\";\nimport StakingABI from \"src/abi/Staking.json\";\nimport TokenABI from \"src/abi/Token.json\";\nimport { numberToWei, parseBalance } from \"src/utils\";\n\nexport const StakeMenu: React.FC<{ balance: string; id: number }> = ({\n    balance,\n    id,\n}) => {\n    const [amount, setAmount] = useState(\"0\");\n    const [loading, setLoading] = useState(false);\n    const [allowance, setAllowance] = useState(false);\n\n    const staking = useContract(STAKING_ADDRESS, StakingABI, true);\n    const token = useContract(TOKEN_ADDRESS, TokenABI, true);\n    const { active, account } = useWeb3React();\n\n    const stakeTokens = async () => {\n        setLoading(true);\n        try {\n            if (staking) {\n                const tx = await staking.stake(numberToWei(amount), id);\n                await tx.wait();\n            }\n        } catch (err) {\n            console.log(err);\n        }\n        setLoading(false);\n    };\n\n    // useEffect(() => {\n    //     if (token) {\n    //         token\n    //             .balanceOf(account)\n    //             .then((balance: string) => setBalance(balance.toString()));\n    //     }\n    // }, [token]);\n\n    return (\n        <div>\n            <div className=\"text-center border\">\n                Available : {parseBalance(active ? balance : 0)} ARSH\n            </div>\n\n            <div className=\"flex p-6 space-x-6 border rounded-b-lg\">\n                <div className=\"flex-1 border\">\n                    <div>\n                        <p className=\"text-base text-gray-300\">\n                            Amount After Stake : <strong>amount</strong>\n                        </p>\n\n                        <p className=\"text-base text-gray-300\">\n                            Rewards Earned : <strong>amount</strong>\n                        </p>\n                    </div>\n                    <div className=\"\">\n                        <Input\n                            label=\"Stake Amount\"\n                            id=\"amount\"\n                            placeholder=\"Amount\"\n                            value={amount}\n                            type=\"number\"\n                            onChange={(e) => setAmount(e.target.value)}\n                        />\n                        <Button\n                            className=\"w-full\"\n                            onClick={stakeTokens}\n                            loading={loading}\n                        >\n                            {allowance ? \"Stake\" : \"Enable\"}\n                        </Button>\n                    </div>\n                </div>\n                <div className=\"border flex-1\"></div>\n            </div>\n        </div>\n    );\n};\n\n/*\nallowance varable same as balance \nnew useeffect \nif allowance = 0 they havnt approved \ndisplay enable  and stake depending on allowance \nif they want to enable make a transaction just like stake owner can approve spender and amount  into contract\napproving the vesting contract address and amount \napprove the biggest amount \nmax approval amount as constant \n\"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\" largest number\nwhen not equal to zero you know they have approved */\n/* have an alllowance varable to set the state of allowance\nuse useEffect */\n"]},"metadata":{},"sourceType":"module"}