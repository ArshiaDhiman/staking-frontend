{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _regeneratorRuntime from \"C:/Users/Arshia Dhiman/Solidity-Staking-Project/staking-frontend/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"C:/Users/Arshia Dhiman/Solidity-Staking-Project/staking-frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\Arshia Dhiman\\\\Solidity-Staking-Project\\\\staking-frontend\\\\src\\\\components\\\\right-stake-menu\\\\index.tsx\",\n    _this = this;\n\nimport React, { useState, useEffect } from \"react\";\nimport { Button } from \"@components\";\nimport { useContract } from \"src/hooks/useContract\";\nimport { STAKING_ADDRESS } from \"src/constants\";\nimport StakingABI from \"src/abi/Staking.json\";\nimport { useWeb3React } from \"@web3-react/core\";\nimport { parseBalance } from \"src/utils\";\nimport { useRouter } from \"next/dist/client/router\";\nexport var RightStakeMenu = /*#__PURE__*/function () {\n  var _s = $RefreshSig$();\n\n  var _ref2 = _asyncToGenerator(_s( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(_ref) {\n    var id, _useState, loading, setLoading, _useState2, reward, setReward, staking, _useWeb3React, account, router, redeemTokens;\n\n    return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _s();\n\n            id = _ref.id;\n            _useState = useState(false), loading = _useState[0], setLoading = _useState[1];\n            _useState2 = useState(0), reward = _useState2[0], setReward = _useState2[1];\n            staking = useContract(STAKING_ADDRESS, StakingABI, true);\n            _useWeb3React = useWeb3React(), account = _useWeb3React.account;\n            router = useRouter();\n            useEffect(function () {\n              if (staking) {\n                staking.calculateReward(id, account).then(function (reward) {\n                  return setReward(reward);\n                });\n              }\n            }, [staking]);\n\n            redeemTokens = /*#__PURE__*/function () {\n              var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n                var tx;\n                return _regeneratorRuntime.wrap(function _callee$(_context) {\n                  while (1) {\n                    switch (_context.prev = _context.next) {\n                      case 0:\n                        setLoading(true);\n                        _context.prev = 1;\n\n                        if (!staking) {\n                          _context.next = 8;\n                          break;\n                        }\n\n                        _context.next = 5;\n                        return staking === null || staking === void 0 ? void 0 : staking.unstake(id);\n\n                      case 5:\n                        tx = _context.sent;\n                        _context.next = 8;\n                        return tx.wait();\n\n                      case 8:\n                        router.reload();\n                        _context.next = 14;\n                        break;\n\n                      case 11:\n                        _context.prev = 11;\n                        _context.t0 = _context[\"catch\"](1);\n                        console.log(_context.t0);\n\n                      case 14:\n                        setLoading(false);\n\n                      case 15:\n                      case \"end\":\n                        return _context.stop();\n                    }\n                  }\n                }, _callee, null, [[1, 11]]);\n              }));\n\n              return function redeemTokens() {\n                return _ref3.apply(this, arguments);\n              };\n            }();\n\n            return _context2.abrupt(\"return\", /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"border flex-1 space-y-2\",\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"text-base text-gray-300\",\n                children: [\"Amount Staked : \", /*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"amount\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 41,\n                  columnNumber: 33\n                }, _this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 40,\n                columnNumber: 13\n              }, _this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"text-base text-gray-300\",\n                children: [\"Rewards Earned : \", /*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: [parseBalance(reward), \" ARSH\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 45,\n                  columnNumber: 34\n                }, _this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 44,\n                columnNumber: 13\n              }, _this), /*#__PURE__*/_jsxDEV(Button, {\n                onClick: redeemTokens,\n                className: \"w-full\",\n                loading: loading,\n                children: \"Redeem\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 48,\n                columnNumber: 13\n              }, _this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 39,\n              columnNumber: 9\n            }, _this));\n\n          case 10:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2);\n  }), \"GfxG2AdnTl+QM3gDu5G5IdlsZXU=\", false, function () {\n    return [useContract, useWeb3React, useRouter];\n  }));\n\n  return function RightStakeMenu(_x) {\n    return _ref2.apply(this, arguments);\n  };\n}();\n_c = RightStakeMenu;\n\nvar _c;\n\n$RefreshReg$(_c, \"RightStakeMenu\");","map":{"version":3,"sources":["C:/Users/Arshia Dhiman/Solidity-Staking-Project/staking-frontend/src/components/right-stake-menu/index.tsx"],"names":["React","useState","useEffect","Button","useContract","STAKING_ADDRESS","StakingABI","useWeb3React","parseBalance","useRouter","RightStakeMenu","id","loading","setLoading","reward","setReward","staking","account","router","calculateReward","then","redeemTokens","unstake","tx","wait","reload","console","log"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,MAAT,QAAuB,aAAvB;AACA,SAASC,WAAT,QAA4B,uBAA5B;AACA,SAASC,eAAT,QAAgC,eAAhC;AACA,OAAOC,UAAP,MAAuB,sBAAvB;AACA,SAASC,YAAT,QAA6B,kBAA7B;AACA,SAASC,YAAT,QAA6B,WAA7B;AACA,SAASC,SAAT,QAA0B,yBAA1B;AAEA,OAAO,IAAMC,cAAwC;AAAA;;AAAA,0EAAG;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;;AAASC,YAAAA,EAAT,QAASA,EAAT;AAAA,wBACtBV,QAAQ,CAAC,KAAD,CADc,EAC7CW,OAD6C,iBACpCC,UADoC;AAAA,yBAExBZ,QAAQ,CAAC,CAAD,CAFgB,EAE7Ca,MAF6C,kBAErCC,SAFqC;AAG9CC,YAAAA,OAH8C,GAGpCZ,WAAW,CAACC,eAAD,EAAkBC,UAAlB,EAA8B,IAA9B,CAHyB;AAAA,4BAIhCC,YAAY,EAJoB,EAI5CU,OAJ4C,iBAI5CA,OAJ4C;AAK9CC,YAAAA,MAL8C,GAKrCT,SAAS,EAL4B;AAOpDP,YAAAA,SAAS,CAAC,YAAM;AACZ,kBAAIc,OAAJ,EAAa;AACTA,gBAAAA,OAAO,CACFG,eADL,CACqBR,EADrB,EACyBM,OADzB,EAEKG,IAFL,CAEU,UAACN,MAAD;AAAA,yBAAoBC,SAAS,CAACD,MAAD,CAA7B;AAAA,iBAFV;AAGH;AACJ,aANQ,EAMN,CAACE,OAAD,CANM,CAAT;;AAQMK,YAAAA,YAf8C;AAAA,mFAe/B;AAAA;AAAA;AAAA;AAAA;AAAA;AACjBR,wBAAAA,UAAU,CAAC,IAAD,CAAV;AADiB;;AAAA,6BAGTG,OAHS;AAAA;AAAA;AAAA;;AAAA;AAAA,+BAIQA,OAJR,aAIQA,OAJR,uBAIQA,OAAO,CAAEM,OAAT,CAAiBX,EAAjB,CAJR;;AAAA;AAIHY,wBAAAA,EAJG;AAAA;AAAA,+BAKHA,EAAE,CAACC,IAAH,EALG;;AAAA;AAObN,wBAAAA,MAAM,CAACO,MAAP;AAPa;AAAA;;AAAA;AAAA;AAAA;AASbC,wBAAAA,OAAO,CAACC,GAAR;;AATa;AAWjBd,wBAAAA,UAAU,CAAC,KAAD,CAAV;;AAXiB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAf+B;;AAAA,8BAe9CQ,YAf8C;AAAA;AAAA;AAAA;;AAAA,2DA6BhD;AAAK,cAAA,SAAS,EAAC,yBAAf;AAAA,sCACI;AAAG,gBAAA,SAAS,EAAC,yBAAb;AAAA,4DACoB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBADpB;AAAA;AAAA;AAAA;AAAA;AAAA,uBADJ,eAKI;AAAG,gBAAA,SAAS,EAAC,yBAAb;AAAA,6DACqB;AAAA,6BAASb,YAAY,CAACM,MAAD,CAArB;AAAA;AAAA;AAAA;AAAA;AAAA,yBADrB;AAAA;AAAA;AAAA;AAAA;AAAA,uBALJ,eASI,QAAC,MAAD;AAAQ,gBAAA,OAAO,EAAEO,YAAjB;AAA+B,gBAAA,SAAS,EAAC,QAAzC;AAAkD,gBAAA,OAAO,EAAET,OAA3D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBATJ;AAAA;AAAA;AAAA;AAAA;AAAA,qBA7BgD;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;AAAA,YAGjCR,WAHiC,EAI7BG,YAJ6B,EAKlCE,SALkC;AAAA;;AAAA,kBAAxCC,cAAwC;AAAA;AAAA;AAAA,GAA9C;KAAMA,c","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { Button } from \"@components\";\nimport { useContract } from \"src/hooks/useContract\";\nimport { STAKING_ADDRESS } from \"src/constants\";\nimport StakingABI from \"src/abi/Staking.json\";\nimport { useWeb3React } from \"@web3-react/core\";\nimport { parseBalance } from \"src/utils\";\nimport { useRouter } from \"next/dist/client/router\";\n\nexport const RightStakeMenu: React.FC<{ id: number }> = async ({ id }) => {\n    const [loading, setLoading] = useState(false);\n    const [reward, setReward] = useState(0);\n    const staking = useContract(STAKING_ADDRESS, StakingABI, true);\n    const { account } = useWeb3React();\n    const router = useRouter();\n\n    useEffect(() => {\n        if (staking) {\n            staking\n                .calculateReward(id, account)\n                .then((reward: number) => setReward(reward));\n        }\n    }, [staking]);\n\n    const redeemTokens = async () => {\n        setLoading(true);\n        try {\n            if (staking) {\n                const tx = await staking?.unstake(id);\n                await tx.wait();\n            }\n            router.reload();\n        } catch (err) {\n            console.log(err);\n        }\n        setLoading(false);\n    };\n    return (\n        <div className=\"border flex-1 space-y-2\">\n            <p className=\"text-base text-gray-300\">\n                Amount Staked : <strong>amount</strong>\n            </p>\n\n            <p className=\"text-base text-gray-300\">\n                Rewards Earned : <strong>{parseBalance(reward)} ARSH</strong>\n            </p>\n\n            <Button onClick={redeemTokens} className=\"w-full\" loading={loading}>\n                Redeem\n            </Button>\n        </div>\n    );\n};\n"]},"metadata":{},"sourceType":"module"}