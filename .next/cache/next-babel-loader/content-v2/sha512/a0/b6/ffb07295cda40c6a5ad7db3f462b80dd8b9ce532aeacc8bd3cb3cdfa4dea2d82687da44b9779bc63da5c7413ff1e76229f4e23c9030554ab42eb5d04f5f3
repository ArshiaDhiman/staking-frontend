{"ast":null,"code":"var _reactJsxDevRuntime = require(\"react/jsx-dev-runtime\");\n\nvar _regeneratorRuntime = require(\"C:/Users/Arshia Dhiman/Solidity-Staking-Project/staking-frontend/node_modules/@babel/runtime/regenerator\");\n\nvar _asyncToGenerator = require(\"C:/Users/Arshia Dhiman/Solidity-Staking-Project/staking-frontend/node_modules/@babel/runtime/helpers/asyncToGenerator\");\n\nvar _slicedToArray = require(\"C:/Users/Arshia Dhiman/Solidity-Staking-Project/staking-frontend/node_modules/@babel/runtime/helpers/slicedToArray\");\n\nvar _jsxFileName = \"C:\\\\Users\\\\Arshia Dhiman\\\\Solidity-Staking-Project\\\\staking-frontend\\\\src\\\\components\\\\left-stake-menu\\\\index.tsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nvar LeftStakeMenu = function LeftStakeMenu(_ref) {\n  _s();\n\n  var balance = _ref.balance,\n      id = _ref.id;\n\n  var _useState = useState(\"0\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      amount = _useState2[0],\n      setAmount = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      loading = _useState4[0],\n      setLoading = _useState4[1];\n\n  var _useState5 = useState(\"0\"),\n      _useState6 = _slicedToArray(_useState5, 2),\n      allowance = _useState6[0],\n      setAllowance = _useState6[1];\n\n  var staking = useContract(STAKING_ADDRESS, StakingABI, true);\n  var token = useContract(TOKEN_ADDRESS, TokenABI, true);\n\n  var _useWeb3React = useWeb3React(),\n      active = _useWeb3React.active,\n      account = _useWeb3React.account;\n\n  var router = useRouter();\n\n  var stakeTokens = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var tx, _tx;\n\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              setLoading(true);\n              _context.prev = 1;\n\n              if (!(allowance === \"0\")) {\n                _context.next = 10;\n                break;\n              }\n\n              _context.next = 5;\n              return token === null || token === void 0 ? void 0 : token.approve(STAKING_ADDRESS, LARGEST_NUM);\n\n            case 5:\n              tx = _context.sent;\n              _context.next = 8;\n              return tx.wait();\n\n            case 8:\n              _context.next = 16;\n              break;\n\n            case 10:\n              if (!staking) {\n                _context.next = 16;\n                break;\n              }\n\n              _context.next = 13;\n              return staking.stake(numberToWei(amount), id);\n\n            case 13:\n              _tx = _context.sent;\n              _context.next = 16;\n              return _tx.wait();\n\n            case 16:\n              router.push(router.asPath);\n              setAmount(\"\");\n              _context.next = 23;\n              break;\n\n            case 20:\n              _context.prev = 20;\n              _context.t0 = _context[\"catch\"](1);\n              console.log(_context.t0);\n\n            case 23:\n              setLoading(false);\n\n            case 24:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[1, 20]]);\n    }));\n\n    return function stakeTokens() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  useEffect(function () {\n    if (token) {\n      token.allowance(account, STAKING_ADDRESS).then(function (allowance) {\n        return setAllowance(allowance.toString());\n      });\n    }\n  }, [token]);\n  return /*#__PURE__*/_reactJsxDevRuntime.jsxDEV(\"div\", {\n    className: \"flex-1 border space-y-2\",\n    children: [/*#__PURE__*/_reactJsxDevRuntime.jsxDEV(\"p\", {\n      className: \"text-base text-gray-300\",\n      children: [\"Amount After Stake : \", /*#__PURE__*/_reactJsxDevRuntime.jsxDEV(\"strong\", {\n        children: \"amount\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 38\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, _this), /*#__PURE__*/_reactJsxDevRuntime.jsxDEV(\"p\", {\n      className: \"text-base text-gray-300\",\n      children: [\"New Estimated Reward : \", /*#__PURE__*/_reactJsxDevRuntime.jsxDEV(\"strong\", {\n        children: \"amount\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 40\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, _this), /*#__PURE__*/_reactJsxDevRuntime.jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_reactJsxDevRuntime.jsxDEV(Input, {\n        label: \"Stake Amount\",\n        id: \"amount\",\n        placeholder: \"Amount\",\n        value: amount,\n        type: \"number\",\n        onChange: function onChange(e) {\n          return setAmount(e.target.value);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }, _this), /*#__PURE__*/_reactJsxDevRuntime.jsxDEV(Button, {\n        onClick: stakeTokens,\n        className: \"w-full\",\n        loading: loading,\n        children: allowance !== \"0\" ? \"Stake\" : \"Enable\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 9\n  }, _this);\n};\n\n_s(LeftStakeMenu, \"pA/WDWDg/wfaQrCYLNiy7SfrzZw=\", true);\n\n_c = LeftStakeMenu;\n\nvar _c;\n\n$RefreshReg$(_c, \"LeftStakeMenu\");","map":{"version":3,"sources":["C:/Users/Arshia Dhiman/Solidity-Staking-Project/staking-frontend/src/components/left-stake-menu/index.tsx"],"names":["LeftStakeMenu","balance","id","useState","amount","setAmount","loading","setLoading","allowance","setAllowance","staking","useContract","STAKING_ADDRESS","StakingABI","token","TOKEN_ADDRESS","TokenABI","useWeb3React","active","account","router","useRouter","stakeTokens","approve","LARGEST_NUM","tx","wait","stake","numberToWei","push","asPath","console","log","useEffect","then","toString","e","target","value"],"mappings":"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","sourcesContent":["const LeftStakeMenu: React.FC<PoolProps> = ({ balance, id }) => {\r\n    const [amount, setAmount] = useState(\"0\");\r\n    const [loading, setLoading] = useState(false);\r\n    const [allowance, setAllowance] = useState(\"0\");\r\n    const staking = useContract(STAKING_ADDRESS, StakingABI, true);\r\n    const token = useContract(TOKEN_ADDRESS, TokenABI, true);\r\n    const { active, account } = useWeb3React();\r\n    const router = useRouter();\r\n\r\n    const stakeTokens = async () => {\r\n        setLoading(true);\r\n        try {\r\n            if (allowance === \"0\") {\r\n                const tx = await token?.approve(STAKING_ADDRESS, LARGEST_NUM);\r\n                await tx.wait();\r\n            } else {\r\n                if (staking) {\r\n                    const tx = await staking.stake(numberToWei(amount), id);\r\n                    await tx.wait();\r\n                }\r\n            }\r\n            router.push(router.asPath);\r\n            setAmount(\"\");\r\n        } catch (err) {\r\n            console.log(err);\r\n        }\r\n        setLoading(false);\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (token) {\r\n            token\r\n                .allowance(account, STAKING_ADDRESS)\r\n                .then((allowance: string) =>\r\n                    setAllowance(allowance.toString()),\r\n                );\r\n        }\r\n    }, [token]);\r\n\r\n    return (\r\n        <div className=\"flex-1 border space-y-2\">\r\n            <p className=\"text-base text-gray-300\">\r\n                Amount After Stake : <strong>amount</strong>\r\n            </p>\r\n            <p className=\"text-base text-gray-300\">\r\n                New Estimated Reward : <strong>amount</strong>\r\n            </p>\r\n            <div>\r\n                <Input\r\n                    label=\"Stake Amount\"\r\n                    id=\"amount\"\r\n                    placeholder=\"Amount\"\r\n                    value={amount}\r\n                    type=\"number\"\r\n                    onChange={(e) => setAmount(e.target.value)}\r\n                />\r\n                <Button\r\n                    onClick={stakeTokens}\r\n                    className=\"w-full\"\r\n                    loading={loading}\r\n                >\r\n                    {allowance !== \"0\" ? \"Stake\" : \"Enable\"}\r\n                </Button>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n"]},"metadata":{},"sourceType":"script"}