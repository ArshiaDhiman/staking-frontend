{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _regeneratorRuntime from \"C:/Users/Arshia Dhiman/Solidity-Staking-Project/staking-frontend/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"C:/Users/Arshia Dhiman/Solidity-Staking-Project/staking-frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\Arshia Dhiman\\\\Solidity-Staking-Project\\\\staking-frontend\\\\src\\\\components\\\\stake-menu\\\\index.tsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { Button, Input } from \"@components\";\nimport { useContract } from \"src/hooks/useContract\";\nimport { useWeb3React } from \"@web3-react/core\";\nimport { STAKING_ADDRESS } from \"src/constants\";\nimport StakingABI from \"src/abi/Staking.json\";\nimport { numberToWei, parseBalance } from \"src/utils\";\nexport var StakeMenu = function StakeMenu(_ref) {\n  _s();\n\n  var balance = _ref.balance,\n      id = _ref.id;\n\n  var _useState = useState(\"0\"),\n      amount = _useState[0],\n      setAmount = _useState[1];\n\n  var _useState2 = useState(false),\n      loading = _useState2[0],\n      setLoading = _useState2[1];\n\n  var staking = useContract(STAKING_ADDRESS, StakingABI, true);\n\n  var _useWeb3React = useWeb3React(),\n      active = _useWeb3React.active,\n      account = _useWeb3React.account;\n\n  var stakeTokens = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var tx;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              setLoading(true);\n              _context.prev = 1;\n\n              if (!staking) {\n                _context.next = 8;\n                break;\n              }\n\n              _context.next = 5;\n              return staking.stake(numberToWei(amount), id);\n\n            case 5:\n              tx = _context.sent;\n              _context.next = 8;\n              return tx.wait();\n\n            case 8:\n              _context.next = 13;\n              break;\n\n            case 10:\n              _context.prev = 10;\n              _context.t0 = _context[\"catch\"](1);\n              console.log(_context.t0);\n\n            case 13:\n              setLoading(false);\n\n            case 14:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[1, 10]]);\n    }));\n\n    return function stakeTokens() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"\",\n      children: parseBalance(balance)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex-1 border p-10\",\n        children: [/*#__PURE__*/_jsxDEV(Input, {\n          label: \"Stake Amount\",\n          id: \"amount\",\n          placeholder: \"Amount\",\n          value: amount,\n          onChange: function onChange(e) {\n            return setAmount(e.target.value);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 21\n        }, _this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: stakeTokens,\n          loading: loading,\n          children: \"Stake\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 21\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 17\n      }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"border p-10 flex-1\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 9\n  }, _this);\n};\n\n_s(StakeMenu, \"TrrZqGzBVMDY6UOf5HhALrPaus0=\", false, function () {\n  return [useContract, useWeb3React];\n});\n\n_c = StakeMenu;\n\nvar _c;\n\n$RefreshReg$(_c, \"StakeMenu\");","map":{"version":3,"sources":["C:/Users/Arshia Dhiman/Solidity-Staking-Project/staking-frontend/src/components/stake-menu/index.tsx"],"names":["React","useState","Button","Input","useContract","useWeb3React","STAKING_ADDRESS","StakingABI","numberToWei","parseBalance","StakeMenu","balance","id","amount","setAmount","loading","setLoading","staking","active","account","stakeTokens","stake","tx","wait","console","log","e","target","value"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,MAAT,EAAiBC,KAAjB,QAA8B,aAA9B;AACA,SAASC,WAAT,QAA4B,uBAA5B;AACA,SAASC,YAAT,QAA6B,kBAA7B;AACA,SAASC,eAAT,QAAgC,eAAhC;AACA,OAAOC,UAAP,MAAuB,sBAAvB;AACA,SAASC,WAAT,EAAsBC,YAAtB,QAA0C,WAA1C;AAEA,OAAO,IAAMC,SAAoD,GAAG,SAAvDA,SAAuD,OAG9D;AAAA;;AAAA,MAFFC,OAEE,QAFFA,OAEE;AAAA,MADFC,EACE,QADFA,EACE;;AAAA,kBAC0BX,QAAQ,CAAC,GAAD,CADlC;AAAA,MACKY,MADL;AAAA,MACaC,SADb;;AAAA,mBAE4Bb,QAAQ,CAAC,KAAD,CAFpC;AAAA,MAEKc,OAFL;AAAA,MAEcC,UAFd;;AAGF,MAAMC,OAAO,GAAGb,WAAW,CAACE,eAAD,EAAkBC,UAAlB,EAA8B,IAA9B,CAA3B;;AAHE,sBAI0BF,YAAY,EAJtC;AAAA,MAIMa,MAJN,iBAIMA,MAJN;AAAA,MAIcC,OAJd,iBAIcA,OAJd;;AAMF,MAAMC,WAAW;AAAA,yEAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAChBJ,cAAAA,UAAU,CAAC,IAAD,CAAV;AADgB;;AAAA,mBAGRC,OAHQ;AAAA;AAAA;AAAA;;AAAA;AAAA,qBAISA,OAAO,CAACI,KAAR,CAAcb,WAAW,CAACK,MAAD,CAAzB,EAAmCD,EAAnC,CAJT;;AAAA;AAIFU,cAAAA,EAJE;AAAA;AAAA,qBAKFA,EAAE,CAACC,IAAH,EALE;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAQZC,cAAAA,OAAO,CAACC,GAAR;;AARY;AAUhBT,cAAAA,UAAU,CAAC,KAAD,CAAV;;AAVgB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAH;;AAAA,oBAAXI,WAAW;AAAA;AAAA;AAAA,KAAjB;;AAaA,sBACI;AAAA,4BACI;AAAK,MAAA,SAAS,EAAC,EAAf;AAAA,gBAAmBX,YAAY,CAACE,OAAD;AAA/B;AAAA;AAAA;AAAA;AAAA,aADJ,eAEI;AAAK,MAAA,SAAS,EAAC,MAAf;AAAA,8BACI;AAAK,QAAA,SAAS,EAAC,oBAAf;AAAA,gCACI,QAAC,KAAD;AACI,UAAA,KAAK,EAAC,cADV;AAEI,UAAA,EAAE,EAAC,QAFP;AAGI,UAAA,WAAW,EAAC,QAHhB;AAII,UAAA,KAAK,EAAEE,MAJX;AAKI,UAAA,QAAQ,EAAE,kBAACa,CAAD;AAAA,mBAAOZ,SAAS,CAACY,CAAC,CAACC,MAAF,CAASC,KAAV,CAAhB;AAAA;AALd;AAAA;AAAA;AAAA;AAAA,iBADJ,eAQI,QAAC,MAAD;AAAQ,UAAA,OAAO,EAAER,WAAjB;AAA8B,UAAA,OAAO,EAAEL,OAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBARJ;AAAA;AAAA;AAAA;AAAA;AAAA,eADJ,eAaI;AAAK,QAAA,SAAS,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA,eAbJ;AAAA;AAAA;AAAA;AAAA;AAAA,aAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,WADJ;AAoBH,CA1CM;;GAAML,S;UAMON,W,EACYC,Y;;;KAPnBK,S","sourcesContent":["import React, { useState } from \"react\";\nimport { Button, Input } from \"@components\";\nimport { useContract } from \"src/hooks/useContract\";\nimport { useWeb3React } from \"@web3-react/core\";\nimport { STAKING_ADDRESS } from \"src/constants\";\nimport StakingABI from \"src/abi/Staking.json\";\nimport { numberToWei, parseBalance } from \"src/utils\";\n\nexport const StakeMenu: React.FC<{ balance: string; id: number }> = ({\n    balance,\n    id,\n}) => {\n    const [amount, setAmount] = useState(\"0\");\n    const [loading, setLoading] = useState(false);\n    const staking = useContract(STAKING_ADDRESS, StakingABI, true);\n    const { active, account } = useWeb3React();\n\n    const stakeTokens = async () => {\n        setLoading(true);\n        try {\n            if (staking) {\n                const tx = await staking.stake(numberToWei(amount), id);\n                await tx.wait();\n            }\n        } catch (err) {\n            console.log(err);\n        }\n        setLoading(false);\n    };\n\n    return (\n        <div>\n            <div className=\"\">{parseBalance(balance)}</div>\n            <div className=\"flex\">\n                <div className=\"flex-1 border p-10\">\n                    <Input\n                        label=\"Stake Amount\"\n                        id=\"amount\"\n                        placeholder=\"Amount\"\n                        value={amount}\n                        onChange={(e) => setAmount(e.target.value)}\n                    />\n                    <Button onClick={stakeTokens} loading={loading}>\n                        Stake\n                    </Button>\n                </div>\n                <div className=\"border p-10 flex-1\"></div>\n            </div>\n        </div>\n    );\n};\n"]},"metadata":{},"sourceType":"module"}