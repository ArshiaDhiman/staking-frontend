{"ast":null,"code":"import { configureStore } from \"@reduxjs/toolkit\";\nimport stakingSlice from \"./features/staking.ts/stakingSlice\";\nexport var store = configureStore({\n  reducer: {\n    staking: stakingSlice\n  }\n}); // Infer the `RootState` and `AppDispatch` types from the store itself","map":{"version":3,"sources":["C:/Users/Arshia Dhiman/Solidity-Staking-Project/staking-frontend/src/store.ts"],"names":["configureStore","stakingSlice","store","reducer","staking"],"mappings":"AAAA,SAASA,cAAT,QAAsD,kBAAtD;AAGA,OAAOC,YAAP,MAAyB,oCAAzB;AAEA,OAAO,IAAMC,KAAK,GAAGF,cAAc,CAAC;AAChCG,EAAAA,OAAO,EAAE;AACLC,IAAAA,OAAO,EAAEH;AADJ;AADuB,CAAD,CAA5B,C,CAMP","sourcesContent":["import { configureStore, Action, ThunkDispatch } from \"@reduxjs/toolkit\";\nimport thunk from \"redux-thunk\";\nimport { applyMiddleware, createStore, combineReducers } from \"redux\";\nimport stakingSlice from \"./features/staking.ts/stakingSlice\";\n\nexport const store = configureStore({\n    reducer: {\n        staking: stakingSlice,\n    },\n});\n\n// Infer the `RootState` and `AppDispatch` types from the store itself\nexport type RootState = ReturnType<typeof store.getState>;\n// Inferred type: {posts: PostsState, comments: CommentsState, users: UsersState}\nexport type AppDispatch = typeof store.dispatch;\n"]},"metadata":{},"sourceType":"module"}