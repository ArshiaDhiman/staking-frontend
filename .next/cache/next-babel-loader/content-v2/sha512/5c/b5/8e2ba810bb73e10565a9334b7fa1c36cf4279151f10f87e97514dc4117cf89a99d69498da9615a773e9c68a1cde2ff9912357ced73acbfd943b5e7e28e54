{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _regeneratorRuntime from \"C:/Users/Arshia Dhiman/Solidity-Staking-Project/staking-frontend/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"C:/Users/Arshia Dhiman/Solidity-Staking-Project/staking-frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\Arshia Dhiman\\\\Solidity-Staking-Project\\\\staking-frontend\\\\src\\\\components\\\\right-stake-menu\\\\index.tsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { Button } from \"@components\";\nimport { useContract } from \"src/hooks/useContract\";\nimport { STAKING_ADDRESS } from \"src/constants\";\nimport StakingABI from \"src/abi/Staking.json\";\nimport { parseBalance } from \"src/utils\";\nimport { useRouter } from \"next/dist/client/router\";\nexport var RightStakeMenu = function RightStakeMenu(_ref) {\n  _s();\n\n  var id = _ref.id,\n      stakedAmount = _ref.stakedAmount,\n      reward = _ref.reward;\n\n  var _useState = useState(false),\n      loading = _useState[0],\n      setLoading = _useState[1];\n\n  var staking = useContract(STAKING_ADDRESS, StakingABI, true);\n  var router = useRouter();\n\n  var redeemTokens = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var tx;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              setLoading(true);\n              _context.prev = 1;\n\n              if (!staking) {\n                _context.next = 8;\n                break;\n              }\n\n              _context.next = 5;\n              return staking === null || staking === void 0 ? void 0 : staking.unstake(id);\n\n            case 5:\n              tx = _context.sent;\n              _context.next = 8;\n              return tx.wait();\n\n            case 8:\n              router.reload();\n              _context.next = 14;\n              break;\n\n            case 11:\n              _context.prev = 11;\n              _context.t0 = _context[\"catch\"](1);\n              console.log(_context.t0);\n\n            case 14:\n              setLoading(false);\n\n            case 15:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[1, 11]]);\n    }));\n\n    return function redeemTokens() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"border flex-1 space-y-2\",\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"text-base text-gray-300\",\n      children: [\"Amount Staked :\", \" \", /*#__PURE__*/_jsxDEV(\"strong\", {\n        children: [parseBalance(stakedAmount), \" ARSH\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, _this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"text-base text-gray-300\",\n      children: [\"Rewards Earned : \", /*#__PURE__*/_jsxDEV(\"strong\", {\n        children: [parseBalance(reward), \" ARSH\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 34\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, _this), /*#__PURE__*/_jsxDEV(Button, {\n      onClick: redeemTokens,\n      className: \"w-full\",\n      loading: loading,\n      children: \"Redeem\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 9\n  }, _this);\n};\n\n_s(RightStakeMenu, \"TEYIsr6w4JvbYUPG5SHAslmCzNk=\", false, function () {\n  return [useContract, useRouter];\n});\n\n_c = RightStakeMenu;\n\nvar _c;\n\n$RefreshReg$(_c, \"RightStakeMenu\");","map":{"version":3,"sources":["C:/Users/Arshia Dhiman/Solidity-Staking-Project/staking-frontend/src/components/right-stake-menu/index.tsx"],"names":["React","useState","Button","useContract","STAKING_ADDRESS","StakingABI","parseBalance","useRouter","RightStakeMenu","id","stakedAmount","reward","loading","setLoading","staking","router","redeemTokens","unstake","tx","wait","reload","console","log"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,MAAT,QAAuB,aAAvB;AACA,SAASC,WAAT,QAA4B,uBAA5B;AACA,SAASC,eAAT,QAAgC,eAAhC;AACA,OAAOC,UAAP,MAAuB,sBAAvB;AAEA,SAASC,YAAT,QAA6B,WAA7B;AACA,SAASC,SAAT,QAA0B,yBAA1B;AAGA,OAAO,IAAMC,cAAoC,GAAG,SAAvCA,cAAuC,OAI9C;AAAA;;AAAA,MAHFC,EAGE,QAHFA,EAGE;AAAA,MAFFC,YAEE,QAFFA,YAEE;AAAA,MADFC,MACE,QADFA,MACE;;AAAA,kBAC4BV,QAAQ,CAAC,KAAD,CADpC;AAAA,MACKW,OADL;AAAA,MACcC,UADd;;AAEF,MAAMC,OAAO,GAAGX,WAAW,CAACC,eAAD,EAAkBC,UAAlB,EAA8B,IAA9B,CAA3B;AACA,MAAMU,MAAM,GAAGR,SAAS,EAAxB;;AAEA,MAAMS,YAAY;AAAA,yEAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AACjBH,cAAAA,UAAU,CAAC,IAAD,CAAV;AADiB;;AAAA,mBAGTC,OAHS;AAAA;AAAA;AAAA;;AAAA;AAAA,qBAIQA,OAJR,aAIQA,OAJR,uBAIQA,OAAO,CAAEG,OAAT,CAAiBR,EAAjB,CAJR;;AAAA;AAIHS,cAAAA,EAJG;AAAA;AAAA,qBAKHA,EAAE,CAACC,IAAH,EALG;;AAAA;AAObJ,cAAAA,MAAM,CAACK,MAAP;AAPa;AAAA;;AAAA;AAAA;AAAA;AASbC,cAAAA,OAAO,CAACC,GAAR;;AATa;AAWjBT,cAAAA,UAAU,CAAC,KAAD,CAAV;;AAXiB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAH;;AAAA,oBAAZG,YAAY;AAAA;AAAA;AAAA,KAAlB;;AAaA,sBACI;AAAK,IAAA,SAAS,EAAC,yBAAf;AAAA,4BACI;AAAG,MAAA,SAAS,EAAC,yBAAb;AAAA,oCACoB,GADpB,eAEI;AAAA,mBAASV,YAAY,CAACI,YAAD,CAArB;AAAA;AAAA;AAAA;AAAA;AAAA,eAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,aADJ,eAMI;AAAG,MAAA,SAAS,EAAC,yBAAb;AAAA,mDACqB;AAAA,mBAASJ,YAAY,CAACK,MAAD,CAArB;AAAA;AAAA;AAAA;AAAA;AAAA,eADrB;AAAA;AAAA;AAAA;AAAA;AAAA,aANJ,eAUI,QAAC,MAAD;AAAQ,MAAA,OAAO,EAAEK,YAAjB;AAA+B,MAAA,SAAS,EAAC,QAAzC;AAAkD,MAAA,OAAO,EAAEJ,OAA3D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAVJ;AAAA;AAAA;AAAA;AAAA;AAAA,WADJ;AAgBH,CAtCM;;GAAMJ,c;UAMOL,W,EACDI,S;;;KAPNC,c","sourcesContent":["import React, { useState } from \"react\";\nimport { Button } from \"@components\";\nimport { useContract } from \"src/hooks/useContract\";\nimport { STAKING_ADDRESS } from \"src/constants\";\nimport StakingABI from \"src/abi/Staking.json\";\nimport { useWeb3React } from \"@web3-react/core\";\nimport { parseBalance } from \"src/utils\";\nimport { useRouter } from \"next/dist/client/router\";\nimport { IStakeMenu } from \"src/ts/interfaces\";\n\nexport const RightStakeMenu: React.FC<IStakeMenu> = ({\n    id,\n    stakedAmount,\n    reward,\n}) => {\n    const [loading, setLoading] = useState(false);\n    const staking = useContract(STAKING_ADDRESS, StakingABI, true);\n    const router = useRouter();\n\n    const redeemTokens = async () => {\n        setLoading(true);\n        try {\n            if (staking) {\n                const tx = await staking?.unstake(id);\n                await tx.wait();\n            }\n            router.reload();\n        } catch (err) {\n            console.log(err);\n        }\n        setLoading(false);\n    };\n    return (\n        <div className=\"border flex-1 space-y-2\">\n            <p className=\"text-base text-gray-300\">\n                Amount Staked :{\" \"}\n                <strong>{parseBalance(stakedAmount)} ARSH</strong>\n            </p>\n\n            <p className=\"text-base text-gray-300\">\n                Rewards Earned : <strong>{parseBalance(reward)} ARSH</strong>\n            </p>\n\n            <Button onClick={redeemTokens} className=\"w-full\" loading={loading}>\n                Redeem\n            </Button>\n        </div>\n    );\n};\n"]},"metadata":{},"sourceType":"module"}