{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _regeneratorRuntime from \"C:/Users/Arshia Dhiman/Solidity-Staking-Project/staking-frontend/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"C:/Users/Arshia Dhiman/Solidity-Staking-Project/staking-frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\Arshia Dhiman\\\\Solidity-Staking-Project\\\\staking-frontend\\\\src\\\\components\\\\right-stake-menu\\\\index.tsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { Button } from \"@components\";\nimport { useContract } from \"src/hooks/useContract\";\nimport { STAKING_ADDRESS } from \"src/constants\";\nimport StakingABI from \"src/abi/Staking.json\";\nimport { parseBalance } from \"src/utils\"; // import { useRouter } from \"next/dist/client/router\";\n\nimport { toast } from \"react-toastify\";\nexport var RightStakeMenu = function RightStakeMenu(_ref) {\n  _s();\n\n  var id = _ref.id,\n      stakedAmount = _ref.stakedAmount,\n      reward = _ref.reward;\n\n  var _useState = useState(false),\n      loading = _useState[0],\n      setLoading = _useState[1];\n\n  var staking = useContract(STAKING_ADDRESS, StakingABI, true); // const router = useRouter();\n\n  var redeemTokens = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var tx;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              setLoading(true);\n              _context.prev = 1;\n\n              if (!staking) {\n                _context.next = 10;\n                break;\n              }\n\n              toast.info(\"Awaiting successful transaction\");\n              _context.next = 6;\n              return staking === null || staking === void 0 ? void 0 : staking.unstake(id);\n\n            case 6:\n              tx = _context.sent;\n              _context.next = 9;\n              return tx.wait();\n\n            case 9:\n              toast.success(\"Success\");\n\n            case 10:\n              _context.next = 16;\n              break;\n\n            case 12:\n              _context.prev = 12;\n              _context.t0 = _context[\"catch\"](1);\n              console.log(_context.t0);\n              toast.error(_context.t0);\n\n            case 16:\n              setLoading(false);\n\n            case 17:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[1, 12]]);\n    }));\n\n    return function redeemTokens() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex-1 space-y-2 relative\",\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"text-base text-gray-300\",\n      children: [\"Amount Staked \", /*#__PURE__*/_jsxDEV(\"strong\", {\n        children: [parseBalance(stakedAmount), \" ARSH\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 31\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, _this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"text-base text-gray-300\",\n      children: [\"Rewards Earned \", /*#__PURE__*/_jsxDEV(\"strong\", {\n        children: [parseBalance(reward), \" ARSH\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 32\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, _this), /*#__PURE__*/_jsxDEV(Button, {\n      onClick: redeemTokens,\n      className: \"w-full absolute inset-x-0 bottom-0\",\n      loading: loading,\n      children: \"Redeem\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 9\n  }, _this);\n};\n\n_s(RightStakeMenu, \"L54CemGB294EqSLc3ZyW7EzTN9I=\", false, function () {\n  return [useContract];\n});\n\n_c = RightStakeMenu;\n\nvar _c;\n\n$RefreshReg$(_c, \"RightStakeMenu\");","map":{"version":3,"sources":["C:/Users/Arshia Dhiman/Solidity-Staking-Project/staking-frontend/src/components/right-stake-menu/index.tsx"],"names":["React","useState","Button","useContract","STAKING_ADDRESS","StakingABI","parseBalance","toast","RightStakeMenu","id","stakedAmount","reward","loading","setLoading","staking","redeemTokens","info","unstake","tx","wait","success","console","log","error"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,MAAT,QAAuB,aAAvB;AACA,SAASC,WAAT,QAA4B,uBAA5B;AACA,SAASC,eAAT,QAAgC,eAAhC;AACA,OAAOC,UAAP,MAAuB,sBAAvB;AACA,SAASC,YAAT,QAA6B,WAA7B,C,CACA;;AACA,SAASC,KAAT,QAAsB,gBAAtB;AAEA,OAAO,IAAMC,cAIX,GAAG,SAJQA,cAIR,OAAkC;AAAA;;AAAA,MAA/BC,EAA+B,QAA/BA,EAA+B;AAAA,MAA3BC,YAA2B,QAA3BA,YAA2B;AAAA,MAAbC,MAAa,QAAbA,MAAa;;AAAA,kBACLV,QAAQ,CAAC,KAAD,CADH;AAAA,MAC5BW,OAD4B;AAAA,MACnBC,UADmB;;AAEnC,MAAMC,OAAO,GAAGX,WAAW,CAACC,eAAD,EAAkBC,UAAlB,EAA8B,IAA9B,CAA3B,CAFmC,CAGnC;;AAEA,MAAMU,YAAY;AAAA,yEAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AACjBF,cAAAA,UAAU,CAAC,IAAD,CAAV;AADiB;;AAAA,mBAGTC,OAHS;AAAA;AAAA;AAAA;;AAITP,cAAAA,KAAK,CAACS,IAAN,CAAW,iCAAX;AAJS;AAAA,qBAKQF,OALR,aAKQA,OALR,uBAKQA,OAAO,CAAEG,OAAT,CAAiBR,EAAjB,CALR;;AAAA;AAKHS,cAAAA,EALG;AAAA;AAAA,qBAMHA,EAAE,CAACC,IAAH,EANG;;AAAA;AAOTZ,cAAAA,KAAK,CAACa,OAAN,CAAc,SAAd;;AAPS;AAAA;AAAA;;AAAA;AAAA;AAAA;AAYbC,cAAAA,OAAO,CAACC,GAAR;AACAf,cAAAA,KAAK,CAACgB,KAAN;;AAba;AAejBV,cAAAA,UAAU,CAAC,KAAD,CAAV;;AAfiB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAH;;AAAA,oBAAZE,YAAY;AAAA;AAAA;AAAA,KAAlB;;AAiBA,sBACI;AAAK,IAAA,SAAS,EAAC,2BAAf;AAAA,4BACI;AAAG,MAAA,SAAS,EAAC,yBAAb;AAAA,gDACkB;AAAA,mBAAST,YAAY,CAACI,YAAD,CAArB;AAAA;AAAA;AAAA;AAAA;AAAA,eADlB;AAAA;AAAA;AAAA;AAAA;AAAA,aADJ,eAKI;AAAG,MAAA,SAAS,EAAC,yBAAb;AAAA,iDACmB;AAAA,mBAASJ,YAAY,CAACK,MAAD,CAArB;AAAA;AAAA;AAAA;AAAA;AAAA,eADnB;AAAA;AAAA;AAAA;AAAA;AAAA,aALJ,eASI,QAAC,MAAD;AACI,MAAA,OAAO,EAAEI,YADb;AAEI,MAAA,SAAS,EAAC,oCAFd;AAGI,MAAA,OAAO,EAAEH,OAHb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aATJ;AAAA;AAAA;AAAA;AAAA;AAAA,WADJ;AAmBH,CA7CM;;GAAMJ,c;UAMOL,W;;;KANPK,c","sourcesContent":["import React, { useState } from \"react\";\nimport { Button } from \"@components\";\nimport { useContract } from \"src/hooks/useContract\";\nimport { STAKING_ADDRESS } from \"src/constants\";\nimport StakingABI from \"src/abi/Staking.json\";\nimport { parseBalance } from \"src/utils\";\n// import { useRouter } from \"next/dist/client/router\";\nimport { toast } from \"react-toastify\";\n\nexport const RightStakeMenu: React.FC<{\n    id: number;\n    stakedAmount: string;\n    reward: string;\n}> = ({ id, stakedAmount, reward }) => {\n    const [loading, setLoading] = useState(false);\n    const staking = useContract(STAKING_ADDRESS, StakingABI, true);\n    // const router = useRouter();\n\n    const redeemTokens = async () => {\n        setLoading(true);\n        try {\n            if (staking) {\n                toast.info(\"Awaiting successful transaction\");\n                const tx = await staking?.unstake(id);\n                await tx.wait();\n                toast.success(\"Success\");\n            }\n\n            // eslint-disable-next-line\n        } catch (err: any) {\n            console.log(err);\n            toast.error(err);\n        }\n        setLoading(false);\n    };\n    return (\n        <div className=\"flex-1 space-y-2 relative\">\n            <p className=\"text-base text-gray-300\">\n                Amount Staked <strong>{parseBalance(stakedAmount)} ARSH</strong>\n            </p>\n\n            <p className=\"text-base text-gray-300\">\n                Rewards Earned <strong>{parseBalance(reward)} ARSH</strong>\n            </p>\n\n            <Button\n                onClick={redeemTokens}\n                className=\"w-full absolute inset-x-0 bottom-0\"\n                loading={loading}\n            >\n                Redeem\n            </Button>\n        </div>\n    );\n};\n"]},"metadata":{},"sourceType":"module"}