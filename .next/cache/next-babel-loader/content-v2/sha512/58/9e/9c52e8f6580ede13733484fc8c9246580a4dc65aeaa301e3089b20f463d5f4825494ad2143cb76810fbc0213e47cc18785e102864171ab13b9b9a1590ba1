{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useMemo } from \"react\";\nimport { Contract } from \"@ethersproject/contracts\";\nimport { useWeb3React } from \"@web3-react/core\";\nexport var useContract = function useContract(address, ABI) {\n  _s();\n\n  var withSigner = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n\n  var _useWeb3React = useWeb3React(),\n      library = _useWeb3React.library,\n      account = _useWeb3React.account;\n\n  return useMemo(function () {\n    return !!address && !!ABI && !!library ? new Contract(address, ABI, withSigner ? library.getSigner(account).connectUnchecked() : library) : undefined;\n  }, [address, ABI, withSigner, library, account]);\n};\n\n_s(useContract, \"+2EejSmz94t94KoFBCRQ+PUTs3M=\", false, function () {\n  return [useWeb3React];\n});","map":{"version":3,"sources":["C:/Users/Arshia Dhiman/Solidity-Staking-Project/staking-frontend/src/hooks/useContract.tsx"],"names":["useMemo","Contract","useWeb3React","useContract","address","ABI","withSigner","library","account","getSigner","connectUnchecked","undefined"],"mappings":";;AAAA,SAASA,OAAT,QAAwB,OAAxB;AACA,SAASC,QAAT,QAA4C,0BAA5C;AACA,SAASC,YAAT,QAA6B,kBAA7B;AAEA,OAAO,IAAMC,WAAW,GAAG,SAAdA,WAAc,CACvBC,OADuB,EAEvBC,GAFuB,EAIA;AAAA;;AAAA,MADvBC,UACuB,uEADV,KACU;;AAAA,sBACMJ,YAAY,EADlB;AAAA,MACfK,OADe,iBACfA,OADe;AAAA,MACNC,OADM,iBACNA,OADM;;AAEvB,SAAOR,OAAO,CACV;AAAA,WACI,CAAC,CAACI,OAAF,IAAa,CAAC,CAACC,GAAf,IAAsB,CAAC,CAACE,OAAxB,GACM,IAAIN,QAAJ,CACIG,OADJ,EAEIC,GAFJ,EAGIC,UAAU,GACJC,OAAO,CAACE,SAAR,CAAkBD,OAAlB,EAA2BE,gBAA3B,EADI,GAEJH,OALV,CADN,GAQMI,SATV;AAAA,GADU,EAWV,CAACP,OAAD,EAAUC,GAAV,EAAeC,UAAf,EAA2BC,OAA3B,EAAoCC,OAApC,CAXU,CAAd;AAaH,CAnBM;;GAAML,W;UAKoBD,Y","sourcesContent":["import { useMemo } from \"react\";\nimport { Contract, ContractInterface } from \"@ethersproject/contracts\";\nimport { useWeb3React } from \"@web3-react/core\";\n\nexport const useContract = (\n    address: string,\n    ABI: ContractInterface,\n    withSigner = false,\n): Contract | undefined => {\n    const { library, account } = useWeb3React();\n    return useMemo(\n        () =>\n            !!address && !!ABI && !!library\n                ? new Contract(\n                      address,\n                      ABI,\n                      withSigner\n                          ? library.getSigner(account).connectUnchecked()\n                          : library,\n                  )\n                : undefined,\n        [address, ABI, withSigner, library, account],\n    );\n};\n"]},"metadata":{},"sourceType":"module"}