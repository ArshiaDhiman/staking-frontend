{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\Arshia Dhiman\\\\Solidity-Staking-Project\\\\staking-frontend\\\\src\\\\components\\\\main\\\\index.tsx\";\nimport React, { useState } from \"react\";\nimport { toast } from \"react-toastify\";\nimport { useWeb3React } from \"@web3-react/core\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport ABI from \"src/abi/Faucet.json\";\nimport { FAUCET_ADDRESS, knownErrors } from \"src/constants\";\nimport { useContract } from \"src/hooks/useContract\";\nexport const Main = () => {\n  const {\n    0: loading,\n    1: setLoading\n  } = useState(false);\n  const faucet = useContract(FAUCET_ADDRESS, ABI, true);\n  const {\n    active,\n    account\n  } = useWeb3React();\n\n  const onClick = async () => {\n    setLoading(true);\n\n    try {\n      if (faucet) {\n        toast.info(\"Awaiting successful transaction\");\n        const tx = await faucet.requestTokens();\n        await tx.wait();\n        toast.success(\"Success\");\n      } // eslint-disable-next-line\n\n    } catch (err) {\n      console.log(err.message);\n      const message = knownErrors[err.message] || err.message;\n      console.log(message);\n      toast.error(message);\n    }\n\n    setLoading(false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"text-center font-light py-5 min-h-screen flex justify-center items-center\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg-level-one max-w-md w-full py-10 rounded-lg border border-white border-opacity-5\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 9\n  }, this);\n};","map":{"version":3,"sources":["C:/Users/Arshia Dhiman/Solidity-Staking-Project/staking-frontend/src/components/main/index.tsx"],"names":["React","useState","toast","useWeb3React","ABI","FAUCET_ADDRESS","knownErrors","useContract","Main","loading","setLoading","faucet","active","account","onClick","info","tx","requestTokens","wait","success","err","console","log","message","error"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,KAAT,QAAsB,gBAAtB;AAEA,SAASC,YAAT,QAA6B,kBAA7B;AACA,OAAO,uCAAP;AAGA,OAAOC,GAAP,MAAgB,qBAAhB;AACA,SAASC,cAAT,EAAyBC,WAAzB,QAA4C,eAA5C;AACA,SAASC,WAAT,QAA4B,uBAA5B;AAGA,OAAO,MAAMC,IAAc,GAAG,MAAM;AAChC,QAAM;AAAA,OAACC,OAAD;AAAA,OAAUC;AAAV,MAAwBT,QAAQ,CAAC,KAAD,CAAtC;AACA,QAAMU,MAAM,GAAGJ,WAAW,CAACF,cAAD,EAAiBD,GAAjB,EAAsB,IAAtB,CAA1B;AACA,QAAM;AAAEQ,IAAAA,MAAF;AAAUC,IAAAA;AAAV,MAAsBV,YAAY,EAAxC;;AAEA,QAAMW,OAAO,GAAG,YAAY;AACxBJ,IAAAA,UAAU,CAAC,IAAD,CAAV;;AACA,QAAI;AACA,UAAIC,MAAJ,EAAY;AACRT,QAAAA,KAAK,CAACa,IAAN,CAAW,iCAAX;AACA,cAAMC,EAAE,GAAG,MAAML,MAAM,CAACM,aAAP,EAAjB;AACA,cAAMD,EAAE,CAACE,IAAH,EAAN;AACAhB,QAAAA,KAAK,CAACiB,OAAN,CAAc,SAAd;AACH,OAND,CAOA;;AACH,KARD,CAQE,OAAOC,GAAP,EAAiB;AACfC,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAG,CAACG,OAAhB;AACA,YAAMA,OAAO,GAAGjB,WAAW,CAACc,GAAG,CAACG,OAAL,CAAX,IAA4BH,GAAG,CAACG,OAAhD;AAEAF,MAAAA,OAAO,CAACC,GAAR,CAAYC,OAAZ;AACArB,MAAAA,KAAK,CAACsB,KAAN,CAAYD,OAAZ;AACH;;AACDb,IAAAA,UAAU,CAAC,KAAD,CAAV;AACH,GAlBD;;AAoBA,sBACI;AAAK,IAAA,SAAS,EAAC,2EAAf;AAAA,2BACI;AAAK,MAAA,SAAS,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH,CA9BM","sourcesContent":["import React, { useState } from \"react\";\nimport { toast } from \"react-toastify\";\nimport Image from \"next/image\";\nimport { useWeb3React } from \"@web3-react/core\";\nimport \"react-toastify/dist/ReactToastify.css\";\n\nimport { Button } from \"@components\";\nimport ABI from \"src/abi/Faucet.json\";\nimport { FAUCET_ADDRESS, knownErrors } from \"src/constants\";\nimport { useContract } from \"src/hooks/useContract\";\nimport { shortenHex } from \"src/utils\";\n\nexport const Main: React.FC = () => {\n    const [loading, setLoading] = useState(false);\n    const faucet = useContract(FAUCET_ADDRESS, ABI, true);\n    const { active, account } = useWeb3React();\n\n    const onClick = async () => {\n        setLoading(true);\n        try {\n            if (faucet) {\n                toast.info(\"Awaiting successful transaction\");\n                const tx = await faucet.requestTokens();\n                await tx.wait();\n                toast.success(\"Success\");\n            }\n            // eslint-disable-next-line\n        } catch (err: any) {\n            console.log(err.message);\n            const message = knownErrors[err.message] || err.message;\n\n            console.log(message);\n            toast.error(message);\n        }\n        setLoading(false);\n    };\n\n    return (\n        <div className=\"text-center font-light py-5 min-h-screen flex justify-center items-center\">\n            <div className=\"bg-level-one max-w-md w-full py-10 rounded-lg border border-white border-opacity-5\"></div>\n        </div>\n    );\n};\n"]},"metadata":{},"sourceType":"module"}