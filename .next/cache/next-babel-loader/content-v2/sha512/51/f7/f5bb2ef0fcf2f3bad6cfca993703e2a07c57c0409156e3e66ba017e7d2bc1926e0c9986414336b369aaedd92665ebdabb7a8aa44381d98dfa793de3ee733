{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _regeneratorRuntime from \"C:/Users/Arshia Dhiman/Solidity-Staking-Project/staking-frontend/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"C:/Users/Arshia Dhiman/Solidity-Staking-Project/staking-frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\Arshia Dhiman\\\\Solidity-Staking-Project\\\\staking-frontend\\\\src\\\\components\\\\stake-menu\\\\index.tsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { Button } from \"@components\";\nimport { useContract } from \"src/hooks/useContract\";\nimport { useWeb3React } from \"@web3-react/core\";\nimport { STAKING_ADDRESS, TOKEN_ADDRESS } from \"src/constants\";\nimport StakingABI from \"src/abi/Staking.json\";\nimport TokenABI from \"src/abi/Token.json\";\nimport { parseBalance } from \"src/utils\";\nimport { useRouter } from \"next/dist/client/router\";\nimport { LeftStakeMenu } from \"@components\";\nexport var StakeMenu = function StakeMenu(_ref) {\n  _s();\n\n  var balance = _ref.balance,\n      id = _ref.id,\n      pool = _ref.pool;\n\n  var _useState = useState(false),\n      loading = _useState[0],\n      setLoading = _useState[1];\n\n  var staking = useContract(STAKING_ADDRESS, StakingABI, true);\n  var token = useContract(TOKEN_ADDRESS, TokenABI, true);\n\n  var _useWeb3React = useWeb3React(),\n      active = _useWeb3React.active,\n      account = _useWeb3React.account;\n\n  var router = useRouter();\n\n  var redeemTokens = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var tx;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              setLoading(true);\n              _context.prev = 1;\n\n              if (!staking) {\n                _context.next = 8;\n                break;\n              }\n\n              _context.next = 5;\n              return staking === null || staking === void 0 ? void 0 : staking.unstake(id);\n\n            case 5:\n              tx = _context.sent;\n              _context.next = 8;\n              return tx.wait();\n\n            case 8:\n              _context.next = 13;\n              break;\n\n            case 10:\n              _context.prev = 10;\n              _context.t0 = _context[\"catch\"](1);\n              console.log(_context.t0);\n\n            case 13:\n              setLoading(false);\n\n            case 14:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[1, 10]]);\n    }));\n\n    return function redeemTokens() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"text-center border\",\n      children: [\"Avalible : \", parseBalance(active ? balance : 0), \" ARSH\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex p-6 space-x-6 border rounded-b-lg\",\n      children: [/*#__PURE__*/_jsxDEV(LeftStakeMenu, {\n        pool: pool,\n        balance: balance,\n        id: id\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"border flex-1 space-y-2\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-base text-gray-300\",\n          children: [\"Amount Staked : \", /*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"amount\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 41\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 21\n        }, _this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-base text-gray-300\",\n          children: [\"Rewards Earned : \", /*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"amount\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 42\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 21\n        }, _this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: redeemTokens,\n          className: \"w-full\",\n          loading: loading,\n          children: \"Redeem\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 21\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 9\n  }, _this);\n};\n\n_s(StakeMenu, \"UJt886jvrLelvyEQ+2C1fnh13og=\", false, function () {\n  return [useContract, useContract, useWeb3React, useRouter];\n});\n\n_c = StakeMenu;\n\nvar _c;\n\n$RefreshReg$(_c, \"StakeMenu\");","map":{"version":3,"sources":["C:/Users/Arshia Dhiman/Solidity-Staking-Project/staking-frontend/src/components/stake-menu/index.tsx"],"names":["React","useState","Button","useContract","useWeb3React","STAKING_ADDRESS","TOKEN_ADDRESS","StakingABI","TokenABI","parseBalance","useRouter","LeftStakeMenu","StakeMenu","balance","id","pool","loading","setLoading","staking","token","active","account","router","redeemTokens","unstake","tx","wait","console","log"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { Button } from \"@components\";\nimport { useContract } from \"src/hooks/useContract\";\nimport { useWeb3React } from \"@web3-react/core\";\nimport { STAKING_ADDRESS, TOKEN_ADDRESS, LARGEST_NUM } from \"src/constants\";\nimport { PoolProps } from \"src/ts/interfaces\";\nimport StakingABI from \"src/abi/Staking.json\";\nimport TokenABI from \"src/abi/Token.json\";\nimport { parseBalance } from \"src/utils\";\nimport { useRouter } from \"next/dist/client/router\";\nimport { LeftStakeMenu } from \"@components\";\n\nexport const StakeMenu: React.FC<PoolProps> = ({ balance, id, pool }) => {\n    const [loading, setLoading] = useState(false);\n    const staking = useContract(STAKING_ADDRESS, StakingABI, true);\n    const token = useContract(TOKEN_ADDRESS, TokenABI, true);\n    const { active, account } = useWeb3React();\n    const router = useRouter();\n\n    const redeemTokens = async () => {\n        setLoading(true);\n        try {\n            if (staking) {\n                const tx = await staking?.unstake(id);\n                await tx.wait();\n            }\n        } catch (err) {\n            console.log(err);\n        }\n        setLoading(false);\n    };\n\n    return (\n        <div>\n            <div className=\"text-center border\">\n                Avalible : {parseBalance(active ? balance : 0)} ARSH\n            </div>\n            <div className=\"flex p-6 space-x-6 border rounded-b-lg\">\n                <LeftStakeMenu pool={pool} balance={balance} id={id} />\n                <div className=\"border flex-1 space-y-2\">\n                    <p className=\"text-base text-gray-300\">\n                        Amount Staked : <strong>amount</strong>\n                    </p>\n\n                    <p className=\"text-base text-gray-300\">\n                        Rewards Earned : <strong>amount</strong>\n                    </p>\n\n                    <Button\n                        onClick={redeemTokens}\n                        className=\"w-full\"\n                        loading={loading}\n                    >\n                        Redeem\n                    </Button>\n                </div>\n            </div>\n        </div>\n    );\n};\n"]},"metadata":{},"sourceType":"module"}