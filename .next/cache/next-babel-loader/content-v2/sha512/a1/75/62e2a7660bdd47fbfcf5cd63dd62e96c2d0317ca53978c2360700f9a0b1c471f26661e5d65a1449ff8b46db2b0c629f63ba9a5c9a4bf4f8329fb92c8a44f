{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\n// Define the initial state using that type\nvar initialState = {\n  pools: []\n};\nexport var stakingSlice = createSlice({\n  name: \"staking\",\n  // `createSlice` will infer the state type from the `initialState` argument\n  initialState: initialState,\n  reducers: {\n    setPools: function setPools(state, action) {\n      state.pools = action.payload;\n    }\n  }\n}); // setPools is an action\n\nvar setPools = stakingSlice.actions.setPools;\nexport { setPools };\nexport default stakingSlice.reducer;","map":{"version":3,"sources":["C:/Users/Arshia Dhiman/Solidity-Staking-Project/staking-frontend/src/features/staking.ts/stakingSlice.ts"],"names":["createSlice","initialState","pools","stakingSlice","name","reducers","setPools","state","action","payload","actions","reducer"],"mappings":"AAAA,SAASA,WAAT,QAA2C,kBAA3C;AAQA;AACA,IAAMC,YAA0B,GAAG;AAC/BC,EAAAA,KAAK,EAAE;AADwB,CAAnC;AAIA,OAAO,IAAMC,YAAY,GAAGH,WAAW,CAAC;AACpCI,EAAAA,IAAI,EAAE,SAD8B;AAEpC;AACAH,EAAAA,YAAY,EAAZA,YAHoC;AAIpCI,EAAAA,QAAQ,EAAE;AACNC,IAAAA,QAAQ,EAAE,kBAACC,KAAD,EAAQC,MAAR,EAA0C;AAChDD,MAAAA,KAAK,CAACL,KAAN,GAAcM,MAAM,CAACC,OAArB;AACH;AAHK;AAJ0B,CAAD,CAAhC,C,CAWP;;IAEeH,Q,GAAaH,YAAY,CAACO,O,CAA1BJ,Q;;AAEf,eAAeH,YAAY,CAACQ,OAA5B","sourcesContent":["import { createSlice, PayloadAction } from \"@reduxjs/toolkit\";\nimport { Pool } from \"@ts/interfaces\";\n\n// Define a type for the slice state\ninterface StakingState {\n    pools: Pool[];\n}\n\n// Define the initial state using that type\nconst initialState: StakingState = {\n    pools: [],\n};\n\nexport const stakingSlice = createSlice({\n    name: \"staking\",\n    // `createSlice` will infer the state type from the `initialState` argument\n    initialState,\n    reducers: {\n        setPools: (state, action: PayloadAction<Pool[]>) => {\n            state.pools = action.payload;\n        },\n    },\n});\n\n// setPools is an action\n\nexport const { setPools } = stakingSlice.actions;\n\nexport default stakingSlice.reducer;\n"]},"metadata":{},"sourceType":"module"}