{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _regeneratorRuntime from \"C:/Users/Arshia Dhiman/Solidity-Staking-Project/staking-frontend/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"C:/Users/Arshia Dhiman/Solidity-Staking-Project/staking-frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\Arshia Dhiman\\\\Solidity-Staking-Project\\\\staking-frontend\\\\src\\\\components\\\\left-stake-menu\\\\index.tsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { Button, Input } from \"@components\";\nimport { useContract } from \"src/hooks/useContract\";\nimport { useWeb3React } from \"@web3-react/core\";\nimport { STAKING_ADDRESS, TOKEN_ADDRESS, LARGEST_NUM } from \"src/constants\";\nimport StakingABI from \"src/abi/Staking.json\";\nimport TokenABI from \"src/abi/Token.json\";\nimport { numberToWei } from \"src/utils\";\nimport { useRouter } from \"next/dist/client/router\";\n\nvar LeftStakeMenu = function LeftStakeMenu(_ref) {\n  _s();\n\n  var balance = _ref.balance,\n      id = _ref.id;\n\n  var _useState = useState(\"0\"),\n      amount = _useState[0],\n      setAmount = _useState[1];\n\n  var _useState2 = useState(false),\n      loading = _useState2[0],\n      setLoading = _useState2[1];\n\n  var _useState3 = useState(\"0\"),\n      allowance = _useState3[0],\n      setAllowance = _useState3[1];\n\n  var staking = useContract(STAKING_ADDRESS, StakingABI, true);\n  var token = useContract(TOKEN_ADDRESS, TokenABI, true);\n\n  var _useWeb3React = useWeb3React(),\n      active = _useWeb3React.active,\n      account = _useWeb3React.account;\n\n  var router = useRouter();\n\n  var stakeTokens = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var tx, _tx;\n\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              setLoading(true);\n              _context.prev = 1;\n\n              if (!(allowance === \"0\")) {\n                _context.next = 10;\n                break;\n              }\n\n              _context.next = 5;\n              return token === null || token === void 0 ? void 0 : token.approve(STAKING_ADDRESS, LARGEST_NUM);\n\n            case 5:\n              tx = _context.sent;\n              _context.next = 8;\n              return tx.wait();\n\n            case 8:\n              _context.next = 16;\n              break;\n\n            case 10:\n              if (!staking) {\n                _context.next = 16;\n                break;\n              }\n\n              _context.next = 13;\n              return staking.stake(numberToWei(amount), id);\n\n            case 13:\n              _tx = _context.sent;\n              _context.next = 16;\n              return _tx.wait();\n\n            case 16:\n              router.push(router.asPath);\n              setAmount(\"\");\n              _context.next = 23;\n              break;\n\n            case 20:\n              _context.prev = 20;\n              _context.t0 = _context[\"catch\"](1);\n              console.log(_context.t0);\n\n            case 23:\n              setLoading(false);\n\n            case 24:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[1, 20]]);\n    }));\n\n    return function stakeTokens() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  useEffect(function () {\n    if (token) {\n      token.allowance(account, STAKING_ADDRESS).then(function (allowance) {\n        return setAllowance(allowance.toString());\n      });\n    }\n  }, [token]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex-1 border space-y-2\",\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"text-base text-gray-300\",\n      children: [\"Amount After Stake : \", /*#__PURE__*/_jsxDEV(\"strong\", {\n        children: \"amount\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 38\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, _this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"text-base text-gray-300\",\n      children: [\"New Estimated Reward : \", /*#__PURE__*/_jsxDEV(\"strong\", {\n        children: \"amount\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 40\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Input, {\n        label: \"Stake Amount\",\n        id: \"amount\",\n        placeholder: \"Amount\",\n        value: amount,\n        type: \"number\",\n        onChange: function onChange(e) {\n          return setAmount(e.target.value);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }, _this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: stakeTokens,\n        className: \"w-full\",\n        loading: loading,\n        children: allowance !== \"0\" ? \"Stake\" : \"Enable\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 17\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 9\n  }, _this);\n};\n\n_s(LeftStakeMenu, \"pA/WDWDg/wfaQrCYLNiy7SfrzZw=\", false, function () {\n  return [useContract, useContract, useWeb3React, useRouter];\n});\n\n_c = LeftStakeMenu;\n\nvar _c;\n\n$RefreshReg$(_c, \"LeftStakeMenu\");","map":{"version":3,"sources":["C:/Users/Arshia Dhiman/Solidity-Staking-Project/staking-frontend/src/components/left-stake-menu/index.tsx"],"names":["React","useState","useEffect","Button","Input","useContract","useWeb3React","STAKING_ADDRESS","TOKEN_ADDRESS","LARGEST_NUM","StakingABI","TokenABI","numberToWei","useRouter","LeftStakeMenu","balance","id","amount","setAmount","loading","setLoading","allowance","setAllowance","staking","token","active","account","router","stakeTokens","approve","tx","wait","stake","push","asPath","console","log","then","toString","e","target","value"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { Button, Input } from \"@components\";\r\nimport { useContract } from \"src/hooks/useContract\";\r\nimport { useWeb3React } from \"@web3-react/core\";\r\nimport { STAKING_ADDRESS, TOKEN_ADDRESS, LARGEST_NUM } from \"src/constants\";\r\nimport { PoolProps } from \"src/ts/interfaces\";\r\nimport StakingABI from \"src/abi/Staking.json\";\r\nimport TokenABI from \"src/abi/Token.json\";\r\nimport { numberToWei, parseBalance } from \"src/utils\";\r\nimport { useRouter } from \"next/dist/client/router\";\r\n\r\nconst LeftStakeMenu: React.FC<PoolProps> = ({ balance, id }) => {\r\n    const [amount, setAmount] = useState(\"0\");\r\n    const [loading, setLoading] = useState(false);\r\n    const [allowance, setAllowance] = useState(\"0\");\r\n    const staking = useContract(STAKING_ADDRESS, StakingABI, true);\r\n    const token = useContract(TOKEN_ADDRESS, TokenABI, true);\r\n    const { active, account } = useWeb3React();\r\n    const router = useRouter();\r\n\r\n    const stakeTokens = async () => {\r\n        setLoading(true);\r\n        try {\r\n            if (allowance === \"0\") {\r\n                const tx = await token?.approve(STAKING_ADDRESS, LARGEST_NUM);\r\n                await tx.wait();\r\n            } else {\r\n                if (staking) {\r\n                    const tx = await staking.stake(numberToWei(amount), id);\r\n                    await tx.wait();\r\n                }\r\n            }\r\n            router.push(router.asPath);\r\n            setAmount(\"\");\r\n        } catch (err) {\r\n            console.log(err);\r\n        }\r\n        setLoading(false);\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (token) {\r\n            token\r\n                .allowance(account, STAKING_ADDRESS)\r\n                .then((allowance: string) =>\r\n                    setAllowance(allowance.toString()),\r\n                );\r\n        }\r\n    }, [token]);\r\n\r\n    return (\r\n        <div className=\"flex-1 border space-y-2\">\r\n            <p className=\"text-base text-gray-300\">\r\n                Amount After Stake : <strong>amount</strong>\r\n            </p>\r\n            <p className=\"text-base text-gray-300\">\r\n                New Estimated Reward : <strong>amount</strong>\r\n            </p>\r\n            <div>\r\n                <Input\r\n                    label=\"Stake Amount\"\r\n                    id=\"amount\"\r\n                    placeholder=\"Amount\"\r\n                    value={amount}\r\n                    type=\"number\"\r\n                    onChange={(e) => setAmount(e.target.value)}\r\n                />\r\n                <Button\r\n                    onClick={stakeTokens}\r\n                    className=\"w-full\"\r\n                    loading={loading}\r\n                >\r\n                    {allowance !== \"0\" ? \"Stake\" : \"Enable\"}\r\n                </Button>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n"]},"metadata":{},"sourceType":"module"}