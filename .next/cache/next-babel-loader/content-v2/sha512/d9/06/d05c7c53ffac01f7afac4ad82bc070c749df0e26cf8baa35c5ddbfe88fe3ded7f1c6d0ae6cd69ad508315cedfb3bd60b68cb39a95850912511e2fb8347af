{"ast":null,"code":"import thunk from \"redux-thunk\";\nimport { applyMiddleware, createStore, combineReducers } from \"redux\";\nimport stakingSlice from \"./features/staking/stakingSlice\";\nconst reducer = combineReducers({\n  staking: stakingSlice\n});\nexport const store = createStore(reducer, applyMiddleware(thunk.withExtraArgument(serviceLocator))); // Infer the `RootState` and `AppDispatch` types from the store itself","map":{"version":3,"sources":["C:/Users/Arshia Dhiman/Solidity-Staking-Project/staking-frontend/src/store.ts"],"names":["thunk","applyMiddleware","createStore","combineReducers","stakingSlice","reducer","staking","store","withExtraArgument","serviceLocator"],"mappings":"AACA,OAAOA,KAAP,MAAkB,aAAlB;AACA,SAASC,eAAT,EAA0BC,WAA1B,EAAuCC,eAAvC,QAA8D,OAA9D;AACA,OAAOC,YAAP,MAAyB,iCAAzB;AAEA,MAAMC,OAAO,GAAGF,eAAe,CAAC;AAC5BG,EAAAA,OAAO,EAAEF;AADmB,CAAD,CAA/B;AAIA,OAAO,MAAMG,KAAK,GAAGL,WAAW,CAC5BG,OAD4B,EAE5BJ,eAAe,CACXD,KAAK,CAACQ,iBAAN,CAAwBC,cAAxB,CADW,CAFa,CAAzB,C,CAWP","sourcesContent":["import { configureStore, Action, ThunkDispatch } from \"@reduxjs/toolkit\";\nimport thunk from \"redux-thunk\";\nimport { applyMiddleware, createStore, combineReducers } from \"redux\";\nimport stakingSlice from \"./features/staking/stakingSlice\";\n\nconst reducer = combineReducers({\n    staking: stakingSlice,\n});\n\nexport const store = createStore(\n    reducer,\n    applyMiddleware(\n        thunk.withExtraArgument(serviceLocator) as ThunkMiddleware<\n            RootState,\n            Action<string>,\n            ServiceLocator\n        >,\n    ),\n);\n\n// Infer the `RootState` and `AppDispatch` types from the store itself\nexport type RootState = ReturnType<typeof store.getState>;\n// Inferred type: {posts: PostsState, comments: CommentsState, users: UsersState}\nexport type AppDispatch = typeof store.dispatch;\n"]},"metadata":{},"sourceType":"module"}