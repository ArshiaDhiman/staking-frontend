{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\Arshia Dhiman\\\\Solidity-Staking-Project\\\\staking-frontend\\\\src\\\\components\\\\stake-menu\\\\index.tsx\";\nimport React, { useState, useEffect } from \"react\";\nimport { Button, Input } from \"@components\";\nimport { useContract } from \"src/hooks/useContract\";\nimport { useWeb3React } from \"@web3-react/core\";\nimport { STAKING_ADDRESS, TOKEN_ADDRESS, LARGEST_NUM } from \"src/constants\";\nimport StakingABI from \"src/abi/Staking.json\";\nimport TokenABI from \"src/abi/Token.json\";\nimport { numberToWei, parseBalance } from \"src/utils\";\nimport { useRouter } from \"next/dist/client/router\";\nexport const StakeMenu = ({\n  balance,\n  id\n}) => {\n  const {\n    0: amount,\n    1: setAmount\n  } = useState(\"0\");\n  const {\n    0: loading,\n    1: setLoading\n  } = useState(false);\n  const {\n    0: allowance,\n    1: setAllowance\n  } = useState(\"0\");\n  const staking = useContract(STAKING_ADDRESS, StakingABI, true);\n  const token = useContract(TOKEN_ADDRESS, TokenABI, true);\n  const {\n    active,\n    account\n  } = useWeb3React();\n  const router = useRouter();\n\n  const stakeTokens = async () => {\n    setLoading(true);\n\n    try {\n      if (allowance === \"0\") {\n        const tx = await (token === null || token === void 0 ? void 0 : token.approve(STAKING_ADDRESS, LARGEST_NUM));\n        await tx.wait();\n      } else {\n        if (staking) {\n          const tx = await staking.stake(numberToWei(amount), id);\n          await tx.wait();\n        }\n      }\n\n      router.push(router.asPath);\n      setAmount(\"\");\n    } catch (err) {\n      console.log(err);\n    }\n\n    setLoading(false);\n  };\n\n  const redeemTokens = async () => {\n    console.log(\"redeemTokens\");\n  };\n\n  useEffect(() => {\n    if (token) {\n      token.allowance(account, STAKING_ADDRESS).then(allowance => setAllowance(allowance.toString()));\n    }\n  }, [token]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"text-center border\",\n      children: [\"Avalible : \", parseBalance(active ? balance : 0), \" ARSH\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex p-6 space-x-6 border rounded-b-lg\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex-1 border\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"spave-y-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-base text-gray-300\",\n            children: [\"Amount After Stake : \", /*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"amount\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 50\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-base text-gray-300\",\n            children: [\"New Estimated Reward : \", /*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"amount\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 52\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(Input, {\n            label: \"Stake Amount\",\n            id: \"amount\",\n            placeholder: \"Amount\",\n            value: amount,\n            type: \"number\",\n            onChange: e => setAmount(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            onClick: stakeTokens,\n            className: \"w-full\",\n            loading: loading,\n            children: allowance !== \"0\" ? \"Stake\" : \"Enable\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"border flex-1\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-base text-gray-300\",\n            children: [\"Amount Staked : \", /*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"amount\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 93,\n              columnNumber: 45\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-base text-gray-300\",\n            children: [\"Rewards Earned : \", /*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"amount\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 97,\n              columnNumber: 46\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"\",\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            onClick: redeemTokens,\n            className: \"w-full\",\n            loading: loading,\n            children: \"Redeem\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 9\n  }, this);\n};","map":{"version":3,"sources":["C:/Users/Arshia Dhiman/Solidity-Staking-Project/staking-frontend/src/components/stake-menu/index.tsx"],"names":["React","useState","useEffect","Button","Input","useContract","useWeb3React","STAKING_ADDRESS","TOKEN_ADDRESS","LARGEST_NUM","StakingABI","TokenABI","numberToWei","parseBalance","useRouter","StakeMenu","balance","id","amount","setAmount","loading","setLoading","allowance","setAllowance","staking","token","active","account","router","stakeTokens","tx","approve","wait","stake","push","asPath","err","console","log","redeemTokens","then","toString","e","target","value"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { Button, Input } from \"@components\";\nimport { useContract } from \"src/hooks/useContract\";\nimport { useWeb3React } from \"@web3-react/core\";\nimport { STAKING_ADDRESS, TOKEN_ADDRESS, LARGEST_NUM } from \"src/constants\";\nimport { PoolProps } from \"src/ts/interfaces\";\nimport StakingABI from \"src/abi/Staking.json\";\nimport TokenABI from \"src/abi/Token.json\";\nimport { numberToWei, parseBalance } from \"src/utils\";\nimport { useRouter } from \"next/dist/client/router\";\n\nexport const StakeMenu: React.FC<PoolProps> = ({ balance, id }) => {\n    const [amount, setAmount] = useState(\"0\");\n    const [loading, setLoading] = useState(false);\n    const [allowance, setAllowance] = useState(\"0\");\n    const staking = useContract(STAKING_ADDRESS, StakingABI, true);\n    const token = useContract(TOKEN_ADDRESS, TokenABI, true);\n    const { active, account } = useWeb3React();\n    const router = useRouter();\n\n    const stakeTokens = async () => {\n        setLoading(true);\n        try {\n            if (allowance === \"0\") {\n                const tx = await token?.approve(STAKING_ADDRESS, LARGEST_NUM);\n                await tx.wait();\n            } else {\n                if (staking) {\n                    const tx = await staking.stake(numberToWei(amount), id);\n                    await tx.wait();\n                }\n            }\n            router.push(router.asPath);\n            setAmount(\"\");\n        } catch (err) {\n            console.log(err);\n        }\n        setLoading(false);\n    };\n\n    const redeemTokens = async () => {\n        console.log(\"redeemTokens\");\n    };\n\n    useEffect(() => {\n        if (token) {\n            token\n                .allowance(account, STAKING_ADDRESS)\n                .then((allowance: string) =>\n                    setAllowance(allowance.toString()),\n                );\n        }\n    }, [token]);\n\n    return (\n        <div>\n            <div className=\"text-center border\">\n                Avalible : {parseBalance(active ? balance : 0)} ARSH\n            </div>\n\n            <div className=\"flex p-6 space-x-6 border rounded-b-lg\">\n                <div className=\"flex-1 border\">\n                    <div className=\"spave-y-4\">\n                        <p className=\"text-base text-gray-300\">\n                            Amount After Stake : <strong>amount</strong>\n                        </p>\n\n                        <p className=\"text-base text-gray-300\">\n                            New Estimated Reward : <strong>amount</strong>\n                        </p>\n                    </div>\n                    <div>\n                        <Input\n                            label=\"Stake Amount\"\n                            id=\"amount\"\n                            placeholder=\"Amount\"\n                            value={amount}\n                            type=\"number\"\n                            onChange={(e) => setAmount(e.target.value)}\n                        />\n                        <Button\n                            onClick={stakeTokens}\n                            className=\"w-full\"\n                            loading={loading}\n                        >\n                            {allowance !== \"0\" ? \"Stake\" : \"Enable\"}\n                        </Button>\n                    </div>\n                </div>\n                <div className=\"border flex-1\">\n                    <div>\n                        <p className=\"text-base text-gray-300\">\n                            Amount Staked : <strong>amount</strong>\n                        </p>\n\n                        <p className=\"text-base text-gray-300\">\n                            Rewards Earned : <strong>amount</strong>\n                        </p>\n                    </div>\n                    <div className=\"\">\n                        <Button\n                            onClick={redeemTokens}\n                            className=\"w-full\"\n                            loading={loading}\n                        >\n                            Redeem\n                        </Button>\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n};\n"]},"metadata":{},"sourceType":"module"}