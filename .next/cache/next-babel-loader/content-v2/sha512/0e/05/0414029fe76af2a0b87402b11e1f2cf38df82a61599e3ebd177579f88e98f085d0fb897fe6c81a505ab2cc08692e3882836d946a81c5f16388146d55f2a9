{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _regeneratorRuntime from \"C:/Users/Arshia Dhiman/Solidity-Staking-Project/staking-frontend/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"C:/Users/Arshia Dhiman/Solidity-Staking-Project/staking-frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\Arshia Dhiman\\\\Solidity-Staking-Project\\\\staking-frontend\\\\src\\\\components\\\\main\\\\index.tsx\",\n    _this = this,\n    _s2 = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { Show, Pools } from \"@components\";\nimport { useContract } from \"src/hooks/useContract\";\nimport { STAKING_ADDRESS, TOKEN_ADDRESS } from \"src/constants\";\nimport TokenABI from \"src/abi/Token.json\";\nimport StakingABI from \"src/abi/Staking.json\";\nimport { useWeb3React } from \"@web3-react/core\";\nexport var Main = function Main(_ref) {\n  _s2();\n\n  var pools = _ref.pools;\n\n  var getBalance = /*#__PURE__*/function () {\n    var _s = $RefreshSig$();\n\n    var _ref2 = _asyncToGenerator(_s( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var _useState, balance, setBalance, token, staking, _useWeb3React, account, tokenBalance;\n\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _s();\n\n              _useState = useState(\"\"), balance = _useState[0], setBalance = _useState[1];\n              token = useContract(TOKEN_ADDRESS, TokenABI, true);\n              staking = useContract(STAKING_ADDRESS, StakingABI, true);\n              _useWeb3React = useWeb3React(), account = _useWeb3React.account;\n              _context.next = 7;\n              return token.balanceOf(account);\n\n            case 7:\n              tokenBalance = _context.sent;\n\n            case 8:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }), \"kgHDuRp6lCLLK0fW5g9ETsCKt5M=\", false, function () {\n      return [useContract, useContract, useWeb3React];\n    }));\n\n    return function getBalance() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  useEffect(function () {\n    console.log(\"useEffect ran\");\n    console.log(tokenBalance);\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"py-12 min-h-screen\",\n    children: [/*#__PURE__*/_jsxDEV(Show, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }, _this), /*#__PURE__*/_jsxDEV(Pools, {\n      pools: pools\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 9\n  }, _this);\n}; // use effect - display the amount od arsh token\n// state variable  use state balance and set balance\n// need abi and address use Contract look at faucet\n// in the useEffect use tokencontract for balance and staking contract for staking\n// in useEffect call contract method for balance with users account as unput\n\n_s2(Main, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = Main;\n\nvar _c;\n\n$RefreshReg$(_c, \"Main\");","map":{"version":3,"sources":["C:/Users/Arshia Dhiman/Solidity-Staking-Project/staking-frontend/src/components/main/index.tsx"],"names":["React","useState","useEffect","Show","Pools","useContract","STAKING_ADDRESS","TOKEN_ADDRESS","TokenABI","StakingABI","useWeb3React","Main","pools","getBalance","balance","setBalance","token","staking","account","balanceOf","tokenBalance","console","log"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AAEA,SAASC,IAAT,EAAeC,KAAf,QAA4B,aAA5B;AACA,SAASC,WAAT,QAA4B,uBAA5B;AACA,SAASC,eAAT,EAA0BC,aAA1B,QAA+C,eAA/C;AACA,OAAOC,QAAP,MAAqB,oBAArB;AACA,OAAOC,UAAP,MAAuB,sBAAvB;AACA,SAASC,YAAT,QAA6B,kBAA7B;AAEA,OAAO,IAAMC,IAA4B,GAAG,SAA/BA,IAA+B,OAAe;AAAA;;AAAA,MAAZC,KAAY,QAAZA,KAAY;;AACvD,MAAMC,UAAU;AAAA;;AAAA,4EAAG;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA,0BACeZ,QAAQ,CAAC,EAAD,CADvB,EACRa,OADQ,iBACCC,UADD;AAETC,cAAAA,KAFS,GAEDX,WAAW,CAACE,aAAD,EAAgBC,QAAhB,EAA0B,IAA1B,CAFV;AAITS,cAAAA,OAJS,GAICZ,WAAW,CAACC,eAAD,EAAkBG,UAAlB,EAA8B,IAA9B,CAJZ;AAAA,8BAKKC,YAAY,EALjB,EAKPQ,OALO,iBAKPA,OALO;AAAA;AAAA,qBAMYF,KAAK,CAACG,SAAN,CAAgBD,OAAhB,CANZ;;AAAA;AAMTE,cAAAA,YANS;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAH;AAAA,cAEEf,WAFF,EAIIA,WAJJ,EAKQK,YALR;AAAA;;AAAA,oBAAVG,UAAU;AAAA;AAAA;AAAA,KAAhB;;AASAX,EAAAA,SAAS,CAAC,YAAM;AACZmB,IAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ;AACAD,IAAAA,OAAO,CAACC,GAAR,CAAYF,YAAZ;AACH,GAHQ,CAAT;AAKA,sBACI;AAAK,IAAA,SAAS,EAAC,oBAAf;AAAA,4BACI,QAAC,IAAD;AAAA;AAAA;AAAA;AAAA,aADJ,eAEI,QAAC,KAAD;AAAO,MAAA,KAAK,EAAER;AAAd;AAAA;AAAA;AAAA;AAAA,aAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,WADJ;AAMH,CArBM,C,CAuBP;AACA;AACA;AACA;AACA;;IA3BaD,I;;KAAAA,I","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { StakingProps } from \"src/ts/interfaces\";\nimport { Show, Pools } from \"@components\";\nimport { useContract } from \"src/hooks/useContract\";\nimport { STAKING_ADDRESS, TOKEN_ADDRESS } from \"src/constants\";\nimport TokenABI from \"src/abi/Token.json\";\nimport StakingABI from \"src/abi/Staking.json\";\nimport { useWeb3React } from \"@web3-react/core\";\n\nexport const Main: React.FC<StakingProps> = ({ pools }) => {\n    const getBalance = async () => {\n        const [balance, setBalance] = useState(\"\");\n        const token = useContract(TOKEN_ADDRESS, TokenABI, true);\n\n        const staking = useContract(STAKING_ADDRESS, StakingABI, true);\n        const { account } = useWeb3React();\n        const tokenBalance = await token.balanceOf(account);\n    };\n\n    useEffect(() => {\n        console.log(\"useEffect ran\");\n        console.log(tokenBalance);\n    });\n\n    return (\n        <div className=\"py-12 min-h-screen\">\n            <Show />\n            <Pools pools={pools} />\n        </div>\n    );\n};\n\n// use effect - display the amount od arsh token\n// state variable  use state balance and set balance\n// need abi and address use Contract look at faucet\n// in the useEffect use tokencontract for balance and staking contract for staking\n// in useEffect call contract method for balance with users account as unput\n"]},"metadata":{},"sourceType":"module"}