{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\Arshia Dhiman\\\\Solidity-Staking-Project\\\\staking-frontend\\\\src\\\\components\\\\stake-menu\\\\index.tsx\",\n    _this = this;\n\nimport React from \"react\";\nimport { TextItem, Button, Input } from \"@components\";\nimport { parseBalance } from \"src/utils\";\nexport var StakeMenu = function StakeMenu(_ref) {\n  var balance = _ref.balance;\n  console.log(balance + \"hello stake menu\");\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \" flex \",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"border p-10\",\n      children: [/*#__PURE__*/_jsxDEV(TextItem, {\n        title: \"Amount staked\",\n        text: parseBalance(balance, decimals = 18, decimalsToDisplay = 2)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 17\n      }, _this), /*#__PURE__*/_jsxDEV(TextItem, {\n        title: \"Amount staked\",\n        text: \"50,000 arsh\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 17\n      }, _this), /*#__PURE__*/_jsxDEV(Input, {\n        label: \"stake Amount\",\n        id: \"address\",\n        placeholder: \"Address\" // value={address}\n        // onChange={(e) => setAddress(e.target.value)}\n\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 17\n      }, _this), /*#__PURE__*/_jsxDEV(Button, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 17\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 13\n    }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"border p-10\",\n      children: [/*#__PURE__*/_jsxDEV(TextItem, {\n        title: \"Amount staked\",\n        text: \"50,000 arsh\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 17\n      }, _this), /*#__PURE__*/_jsxDEV(TextItem, {\n        title: \"Amount staked\",\n        text: \"50,000 arsh\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 17\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 9\n  }, _this);\n}; // use effect - display the amount od arsh token\n// state variable  use state balance and set balance\n// need abi and address use Contract look at faucet\n// in the useEffect use tokencontract for balance and staking contract for staking\n// in useEffect call contract method for balance with users account as unput\n\n_c = StakeMenu;\n\nvar _c;\n\n$RefreshReg$(_c, \"StakeMenu\");","map":{"version":3,"sources":["C:/Users/Arshia Dhiman/Solidity-Staking-Project/staking-frontend/src/components/stake-menu/index.tsx"],"names":["React","TextItem","Button","Input","parseBalance","StakeMenu","balance","console","log","decimals","decimalsToDisplay"],"mappings":";;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,EAAmBC,MAAnB,EAA2BC,KAA3B,QAAwC,aAAxC;AAEA,SAASC,YAAT,QAA6B,WAA7B;AAEA,OAAO,IAAMC,SAA8C,GAAG,SAAjDA,SAAiD,OAAiB;AAAA,MAAdC,OAAc,QAAdA,OAAc;AAC3EC,EAAAA,OAAO,CAACC,GAAR,CAAYF,OAAO,GAAG,kBAAtB;AACA,sBACI;AAAK,IAAA,SAAS,EAAC,QAAf;AAAA,4BACI;AAAK,MAAA,SAAS,EAAC,aAAf;AAAA,8BACI,QAAC,QAAD;AACI,QAAA,KAAK,EAAE,eADX;AAEI,QAAA,IAAI,EAAEF,YAAY,CACdE,OADc,EAEbG,QAAQ,GAAG,EAFE,EAGbC,iBAAiB,GAAG,CAHP;AAFtB;AAAA;AAAA;AAAA;AAAA,eADJ,eASI,QAAC,QAAD;AAAU,QAAA,KAAK,EAAE,eAAjB;AAAkC,QAAA,IAAI,EAAE;AAAxC;AAAA;AAAA;AAAA;AAAA,eATJ,eAUI,QAAC,KAAD;AACI,QAAA,KAAK,EAAC,cADV;AAEI,QAAA,EAAE,EAAC,SAFP;AAGI,QAAA,WAAW,EAAC,SAHhB,CAII;AACA;;AALJ;AAAA;AAAA;AAAA;AAAA,eAVJ,eAiBI,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,eAjBJ;AAAA;AAAA;AAAA;AAAA;AAAA,aADJ,eAoBI;AAAK,MAAA,SAAS,EAAC,aAAf;AAAA,8BACI,QAAC,QAAD;AAAU,QAAA,KAAK,EAAE,eAAjB;AAAkC,QAAA,IAAI,EAAE;AAAxC;AAAA;AAAA;AAAA;AAAA,eADJ,eAEI,QAAC,QAAD;AAAU,QAAA,KAAK,EAAE,eAAjB;AAAkC,QAAA,IAAI,EAAE;AAAxC;AAAA;AAAA;AAAA;AAAA,eAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,aApBJ;AAAA;AAAA;AAAA;AAAA;AAAA,WADJ;AA2BH,CA7BM,C,CA8BP;AACA;AACA;AACA;AACA;;KAlCaL,S","sourcesContent":["import React from \"react\";\nimport { TextItem, Button, Input } from \"@components\";\nimport { BigNumberish } from \"@ethersproject/bignumber\";\nimport { parseBalance } from \"src/utils\";\n\nexport const StakeMenu: React.FC<{ balance: BigNumberish }> = ({ balance }) => {\n    console.log(balance + \"hello stake menu\");\n    return (\n        <div className=\" flex \">\n            <div className=\"border p-10\">\n                <TextItem\n                    title={\"Amount staked\"}\n                    text={parseBalance(\n                        balance,\n                        (decimals = 18),\n                        (decimalsToDisplay = 2),\n                    )}\n                />\n                <TextItem title={\"Amount staked\"} text={\"50,000 arsh\"} />\n                <Input\n                    label=\"stake Amount\"\n                    id=\"address\"\n                    placeholder=\"Address\"\n                    // value={address}\n                    // onChange={(e) => setAddress(e.target.value)}\n                />\n                <Button></Button>\n            </div>\n            <div className=\"border p-10\">\n                <TextItem title={\"Amount staked\"} text={\"50,000 arsh\"} />\n                <TextItem title={\"Amount staked\"} text={\"50,000 arsh\"} />\n            </div>\n        </div>\n    );\n};\n// use effect - display the amount od arsh token\n// state variable  use state balance and set balance\n// need abi and address use Contract look at faucet\n// in the useEffect use tokencontract for balance and staking contract for staking\n// in useEffect call contract method for balance with users account as unput\n"]},"metadata":{},"sourceType":"module"}