{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\Arshia Dhiman\\\\Solidity-Staking-Project\\\\staking-frontend\\\\src\\\\components\\\\main\\\\index.tsx\";\n// import React, { useState } from \"react\";\n// import { toast } from \"react-toastify\";\n// import Image from \"next/image\";\n// import { useWeb3React } from \"@web3-react/core\";\n// import \"react-toastify/dist/ReactToastify.css\";\n// import { Button } from \"@components\";\n// import ABI from \"src/abi/Staking.json\";\n// import { STAKING_ADDRESS, knownErrors } from \"src/constants\";\n// import { useContract } from \"src/hooks/useContract\";\n// import { shortenHex } from \"src/utils\";\n// // import { Pools } from \"@components\";\n// import { IntroCard } from \"@components\";\nexport const Card = ({\n  children\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"border rounded-lg text-left flex justify-between px-4 py-2\",\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 9\n  }, this);\n};\nexport const TextItem = ({\n  title,\n  text\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"text-sm text-gray-300\",\n      children: title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n      className: \"text-lg\",\n      children: /*#__PURE__*/_jsxDEV(\"strong\", {\n        children: text\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 9\n  }, this);\n};\nexport const StakingPool = ({\n  pool\n}) => {\n  function convertHMS(value) {\n    const sec = parseInt(value, 10); // convert value to number if it's string\n\n    let hours = Math.floor(sec / 3600); // get hours\n\n    let minutes = Math.floor((sec - hours * 3600) / 60); // get minutes\n\n    let seconds = sec - hours * 3600 - minutes * 60; //  get seconds\n    // add 0 if value < 10; Example: 2 => 02\n\n    if (hours < 10) {\n      hours = \"0\" + hours;\n    }\n\n    if (minutes < 10) {\n      minutes = \"0\" + minutes;\n    }\n\n    if (seconds < 10) {\n      seconds = \"0\" + seconds;\n    }\n\n    return hours + \":\" + minutes + \":\" + seconds; // Return is HH : MM : SS\n  }\n\n  return /*#__PURE__*/_jsxDEV(Card, {\n    children: [/*#__PURE__*/_jsxDEV(TextItem, {\n      title: \"Name\",\n      text: pool.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(TextItem, {\n      title: \"Reward\",\n      text: pool.rewardRate + \" %\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(TextItem, {\n      title: \"\",\n      text: convertHMS(pool.lockPeriod)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(TextItem, {\n      title: \"Total Staked\",\n      text: pool.totalStaked + \" %\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 9\n  }, this);\n};\nexport const Pools = ({\n  pools\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"space-y-4 px-4\",\n    children: pools.map((pool, id) => /*#__PURE__*/_jsxDEV(StakingPool, {\n      pool: pool\n    }, id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 17\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 9\n  }, this);\n};\nexport const Main = ({\n  pools\n}) => {\n  console.log(pools);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"text-center py-5 min-h-screen \",\n    children: /*#__PURE__*/_jsxDEV(Pools, {\n      pools: pools\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 85,\n    columnNumber: 9\n  }, this);\n};","map":{"version":3,"sources":["C:/Users/Arshia Dhiman/Solidity-Staking-Project/staking-frontend/src/components/main/index.tsx"],"names":["Card","children","TextItem","title","text","StakingPool","pool","convertHMS","value","sec","parseInt","hours","Math","floor","minutes","seconds","name","rewardRate","lockPeriod","totalStaked","Pools","pools","map","id","Main","console","log"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,OAAO,MAAMA,IAAc,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAkB;AAC5C,sBACI;AAAK,IAAA,SAAS,EAAC,4DAAf;AAAA,cACKA;AADL;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH,CANM;AAQP,OAAO,MAAMC,QAAmD,GAAG,CAAC;AAChEC,EAAAA,KADgE;AAEhEC,EAAAA;AAFgE,CAAD,KAG7D;AACF,sBACI;AAAA,4BACI;AAAG,MAAA,SAAS,EAAC,uBAAb;AAAA,gBAAsCD;AAAtC;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAI,MAAA,SAAS,EAAC,SAAd;AAAA,6BACI;AAAA,kBAASC;AAAT;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAQH,CAZM;AAcP,OAAO,MAAMC,WAAgC,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAc;AAC1D,WAASC,UAAT,CAAoBC,KAApB,EAA2B;AACvB,UAAMC,GAAG,GAAGC,QAAQ,CAACF,KAAD,EAAQ,EAAR,CAApB,CADuB,CACU;;AACjC,QAAIG,KAAsB,GAAGC,IAAI,CAACC,KAAL,CAAWJ,GAAG,GAAG,IAAjB,CAA7B,CAFuB,CAE8B;;AACrD,QAAIK,OAAwB,GAAGF,IAAI,CAACC,KAAL,CAAW,CAACJ,GAAG,GAAGE,KAAK,GAAG,IAAf,IAAuB,EAAlC,CAA/B,CAHuB,CAG+C;;AACtE,QAAII,OAAwB,GAAGN,GAAG,GAAGE,KAAK,GAAG,IAAd,GAAqBG,OAAO,GAAG,EAA9D,CAJuB,CAI2C;AAClE;;AACA,QAAIH,KAAK,GAAG,EAAZ,EAAgB;AACZA,MAAAA,KAAK,GAAG,MAAMA,KAAd;AACH;;AACD,QAAIG,OAAO,GAAG,EAAd,EAAkB;AACdA,MAAAA,OAAO,GAAG,MAAMA,OAAhB;AACH;;AACD,QAAIC,OAAO,GAAG,EAAd,EAAkB;AACdA,MAAAA,OAAO,GAAG,MAAMA,OAAhB;AACH;;AACD,WAAOJ,KAAK,GAAG,GAAR,GAAcG,OAAd,GAAwB,GAAxB,GAA8BC,OAArC,CAfuB,CAeuB;AACjD;;AAED,sBACI,QAAC,IAAD;AAAA,4BACI,QAAC,QAAD;AAAU,MAAA,KAAK,EAAE,MAAjB;AAAyB,MAAA,IAAI,EAAET,IAAI,CAACU;AAApC;AAAA;AAAA;AAAA;AAAA,YADJ,eAGI,QAAC,QAAD;AAAU,MAAA,KAAK,EAAE,QAAjB;AAA2B,MAAA,IAAI,EAAEV,IAAI,CAACW,UAAL,GAAkB;AAAnD;AAAA;AAAA;AAAA;AAAA,YAHJ,eAKI,QAAC,QAAD;AAAU,MAAA,KAAK,EAAE,EAAjB;AAAqB,MAAA,IAAI,EAAEV,UAAU,CAACD,IAAI,CAACY,UAAN;AAArC;AAAA;AAAA;AAAA;AAAA,YALJ,eAOI,QAAC,QAAD;AAAU,MAAA,KAAK,EAAE,cAAjB;AAAiC,MAAA,IAAI,EAAEZ,IAAI,CAACa,WAAL,GAAmB;AAA1D;AAAA;AAAA;AAAA;AAAA,YAPJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAWH,CA9BM;AAgCP,OAAO,MAAMC,KAA6B,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAe;AACxD,sBACI;AAAK,IAAA,SAAS,EAAC,gBAAf;AAAA,cACKA,KAAK,CAACC,GAAN,CAAU,CAAChB,IAAD,EAAOiB,EAAP,kBACP,QAAC,WAAD;AAAsB,MAAA,IAAI,EAAEjB;AAA5B,OAAkBiB,EAAlB;AAAA;AAAA;AAAA;AAAA,YADH;AADL;AAAA;AAAA;AAAA;AAAA,UADJ;AAOH,CARM;AAUP,OAAO,MAAMC,IAA4B,GAAG,CAAC;AAAEH,EAAAA;AAAF,CAAD,KAAe;AACvDI,EAAAA,OAAO,CAACC,GAAR,CAAYL,KAAZ;AAEA,sBACI;AAAK,IAAA,SAAS,EAAC,gCAAf;AAAA,2BACI,QAAC,KAAD;AAAO,MAAA,KAAK,EAAEA;AAAd;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH,CARM","sourcesContent":["// import React, { useState } from \"react\";\n// import { toast } from \"react-toastify\";\n// import Image from \"next/image\";\n// import { useWeb3React } from \"@web3-react/core\";\n// import \"react-toastify/dist/ReactToastify.css\";\nimport { StakingProps, PoolProps } from \"src/ts/interfaces\";\nimport { convertHMS } from \"src/utils.ts\";\n\n// import { Button } from \"@components\";\n// import ABI from \"src/abi/Staking.json\";\n// import { STAKING_ADDRESS, knownErrors } from \"src/constants\";\n// import { useContract } from \"src/hooks/useContract\";\n// import { shortenHex } from \"src/utils\";\n// // import { Pools } from \"@components\";\n// import { IntroCard } from \"@components\";\n\nexport const Card: React.FC = ({ children }) => {\n    return (\n        <div className=\"border rounded-lg text-left flex justify-between px-4 py-2\">\n            {children}\n        </div>\n    );\n};\n\nexport const TextItem: React.FC<{ title: string; text: string }> = ({\n    title,\n    text,\n}) => {\n    return (\n        <div>\n            <p className=\"text-sm text-gray-300\">{title}</p>\n            <h4 className=\"text-lg\">\n                <strong>{text}</strong>\n            </h4>\n        </div>\n    );\n};\n\nexport const StakingPool: React.FC<PoolProps> = ({ pool }) => {\n    function convertHMS(value) {\n        const sec = parseInt(value, 10); // convert value to number if it's string\n        let hours: string | number = Math.floor(sec / 3600); // get hours\n        let minutes: string | number = Math.floor((sec - hours * 3600) / 60); // get minutes\n        let seconds: string | number = sec - hours * 3600 - minutes * 60; //  get seconds\n        // add 0 if value < 10; Example: 2 => 02\n        if (hours < 10) {\n            hours = \"0\" + hours;\n        }\n        if (minutes < 10) {\n            minutes = \"0\" + minutes;\n        }\n        if (seconds < 10) {\n            seconds = \"0\" + seconds;\n        }\n        return hours + \":\" + minutes + \":\" + seconds; // Return is HH : MM : SS\n    }\n\n    return (\n        <Card>\n            <TextItem title={\"Name\"} text={pool.name} />\n\n            <TextItem title={\"Reward\"} text={pool.rewardRate + \" %\"} />\n\n            <TextItem title={\"\"} text={convertHMS(pool.lockPeriod)} />\n\n            <TextItem title={\"Total Staked\"} text={pool.totalStaked + \" %\"} />\n        </Card>\n    );\n};\n\nexport const Pools: React.FC<StakingProps> = ({ pools }) => {\n    return (\n        <div className=\"space-y-4 px-4\">\n            {pools.map((pool, id) => (\n                <StakingPool key={id} pool={pool} />\n            ))}\n        </div>\n    );\n};\n\nexport const Main: React.FC<StakingProps> = ({ pools }) => {\n    console.log(pools);\n\n    return (\n        <div className=\"text-center py-5 min-h-screen \">\n            <Pools pools={pools} />\n        </div>\n    );\n};\n"]},"metadata":{},"sourceType":"module"}